{
    "core": {
        "title": "Core Drush commands",
        "commands": {
            "archive-dump": {
                "description": "Backup your code, files, and database into a single file.",
                "arguments": {
                    "sites": "Optional. Site specifications, delimited by commas. Typically, list subdirectory name(s) under \/sites."
                },
                "options": {
                    "description": "Describe the archive contents.",
                    "tags": "Add tags to the archive manifest. Delimit multiple by commas.",
                    "destination": "The full path and filename in which the archive should be stored. If omitted, it will be saved to the drush-backups directory and a filename will be generated.",
                    "overwrite": "Do not fail if the destination file exists; overwrite it instead.",
                    "generator": "The generator name to store in the MANIFEST file. The default is \"Drush archive-dump\".",
                    "generatorversion": "The generator version number to store in the MANIFEST file. The default is 7.0.0.",
                    "pipe": "Only print the destination of the archive. Useful for scripts that don't pass --destination.",
                    "preserve-symlinks": "Preserve symbolic links.",
                    "no-core": "Exclude Drupal core, so the backup only contains the site specific stuff.",
                    "tar-options": "Options passed thru to the tar command."
                },
                "examples": {
                    "drush archive-dump default,example.com,foo.com": "Write an archive containing 3 sites in it.",
                    "drush archive-dump @sites": "Save archive containing all sites in a multi-site.",
                    "drush archive-dump default --destination=\/backups\/mysite.tar": "Save archive to custom location.",
                    "drush archive-dump --tar-options=\"--exclude=.git --exclude=sites\/default\/files\"": "Omits any .git directories found in the tree as well as sites\/default\/files.",
                    "drush archive-dump --tar-options=\"--exclude=%files\"": "Placeholder %files is replaced with the real path for the current site, and that path is excluded."
                },
                "bootstrap": 2,
                "aliases": [
                    "ard",
                    "archive-backup",
                    "arb"
                ],
                "command": "archive-dump",
                "command-hook": "archive-dump",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "archive",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "archive-restore": {
                "description": "Expand a site archive into a Drupal web site.",
                "arguments": {
                    "file": "The site archive file that should be expanded.",
                    "site name": "Optional. Which site within the archive you want to restore. Defaults to all."
                },
                "required-arguments": 1,
                "options": {
                    "destination": "Specify where the Drupal site should be expanded, including the docroot. Defaults to the current working directory.",
                    "db-prefix": "An optional table prefix to use during restore.",
                    "db-url": {
                        "description": "A Drupal 6 style database URL indicating the target for database restore. If not provided, the archived settings.php is used.",
                        "example-value": "mysql:\/\/root:pass@host\/db"
                    },
                    "db-su": "Account to use when creating the new database. Optional.",
                    "db-su-pw": "Password for the \"db-su\" account. Optional.",
                    "overwrite": "Allow drush to overwrite any files in the destination.",
                    "tar-options": "Options passed thru to the tar command."
                },
                "examples": {
                    "drush archive-restore .\/example.tar.gz": "Restore the files and databases for all sites in the archive.",
                    "drush archive-restore .\/example.tar.gz example.com": "Restore the files and database for example.com site.",
                    "drush archive-restore .\/example.tar.gz --destination=\/var\/www\/example.com\/docroot": "Restore archive to a custom location.",
                    "drush archive-restore .\/example.tar.gz --db-url=mysql:\/\/root:pass@127.0.0.1\/dbname": "Restore archive to a new database (and customize settings.php to point there.)."
                },
                "bootstrap": -1,
                "aliases": [
                    "arr"
                ],
                "command": "archive-restore",
                "command-hook": "archive-restore",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "archive",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "browse": {
                "description": "Display a link to a given path or open link in a browser.",
                "bootstrap": -1,
                "handle-remote-commands": true,
                "arguments": {
                    "path": "Path to open. If omitted, the site front page will be opened."
                },
                "options": {
                    "browser": "Specify a particular browser (defaults to operating system default). Set to 0 to suppress opening a browser.",
                    "redirect-port": "The port that the web server is redirected to (e.g. when running within a Vagrant environment)"
                },
                "examples": {
                    "drush browse": "Open default web browser (if configured or detected) to the site front page.",
                    "drush browse node\/1": "Open web browser to the path node\/1.",
                    "drush @example.prod": "Open a browser to the web site specified in a site alias.",
                    "drush browse --browser=firefox admin": "Open Firefox web browser to the path 'admin'."
                },
                "command": "browse",
                "command-hook": "browse",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "browse",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "core-cli": {
                "description": "Open an interactive shell on a Drupal site.",
                "remote-tty": true,
                "aliases": [
                    "php"
                ],
                "bootstrap": -2,
                "command": "core-cli",
                "command-hook": "core-cli",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "cli",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "core-config": {
                "description": "Edit drushrc, site alias, and Drupal settings.php files.",
                "bootstrap": -2,
                "arguments": {
                    "filter": "A substring for filtering the list of files. Omit this argument to choose from loaded files."
                },
                "options": {
                    "bg": "Run editor in the background. Does not work with editors such as `vi` that run in the terminal."
                },
                "examples": {
                    "drush core-config": "Pick from a list of config\/alias\/settings files. Open selected in editor.",
                    "drush --bg core-config": "Return to shell prompt as soon as the editor window opens.",
                    "drush core-config etc": "Edit the global configuration file.",
                    "drush core-config demo.alia": "Edit a particular alias file.",
                    "drush core-config sett": "Edit settings.php for the current Drupal site.",
                    "drush core-config --choice=2": "Edit the second file in the choice list."
                },
                "aliases": [
                    "conf",
                    "config"
                ],
                "command": "core-config",
                "command-hook": "core-config",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "core-cron": {
                "description": "Run all cron hooks in all active modules for specified site.",
                "aliases": [
                    "cron"
                ],
                "topics": [
                    "docs-cron"
                ],
                "command": "core-cron",
                "command-hook": "core-cron",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "core",
                "bootstrap": 6
            },
            "core-execute": {
                "description": "Execute a shell command. Usually used with a site alias.",
                "bootstrap": -1,
                "arguments": {
                    "command": "The shell command to be executed."
                },
                "options": {
                    "escape": "Escape parameters before executing them with the shell. Default is escape; use --escape=0 to disable.",
                    "ssh-options": "A string of extra options that will be passed to the ssh command (e.g. \"-p 100\")",
                    "tty": "Create a tty (e.g. to run an interactive program).",
                    "escaped": "Command string already escaped; do not add additional quoting."
                },
                "required-arguments": true,
                "allow-additional-options": true,
                "handle-remote-commands": true,
                "strict-option-handling": true,
                "examples": {
                    "drush core-execute git pull origin rebase": "Retrieve latest code from git"
                },
                "aliases": [
                    "exec",
                    "execute"
                ],
                "topics": [
                    "docs-aliases"
                ],
                "command": "core-execute",
                "command-hook": "core-execute",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "remote-tty": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "core"
            },
            "core-quick-drupal": {
                "description": "Download, install, serve and login to Drupal with minimal configuration and dependencies.",
                "bootstrap": -1,
                "aliases": [
                    "qd"
                ],
                "arguments": {
                    "site": "Short name for the site to be created - used as a directory name and as sqlite file name. Optional - if omitted timestamped \"quick-drupal\" directory will be used instead.",
                    "projects": "A list of projects to download into the new site. If projects contain extensions (modules or themes) with the same name they will be enabled by default. See --enable option to control this behaviour further."
                },
                "examples": {
                    "drush qd": "Download and install stable release of Drupal into a timestamped directory, start server, and open the site logged in as admin.",
                    "drush qd --profile=minimal --cache --core=drupal-8.0.x --yes": "Fire up dev release of Drupal site with minimal install profile.",
                    "drush qd testsite devel --server=:8081\/admin --browser=firefox --cache --yes": "Fire up stable release (using the cache) of Drupal site called \"testsite\", download and enable devel module, start a server on port 8081 and open \/admin in firefox.",
                    "drush qd commercesite --core=commerce_kickstart --profile=commerce_kickstart --cache --yes --watchdog": "Download and install the \"Commerce Kickstart\" distribution\/install profile, display watchdog messages on the server console.",
                    "drush qd --makefile=mysite.make": "Create and install a site from a makefile."
                },
                "options": {
                    "core": "Drupal core to download. Defaults to \"drupal\" (latest stable version).",
                    "use-existing": "Use an existing Drupal root, specified with --root. Overrides --core.",
                    "profile": "The install profile to use. Defaults to standard.",
                    "enable": "Specific extensions (modules or themes) to enable. By default, extensions with the same name as requested projects will be enabled automatically.",
                    "server": "Host IP address and port number to bind to and path to open in web browser (hyphen to clear a default path), all elements optional. See runserver examples for shorthand.",
                    "no-server": "Avoid starting runserver (and browser) for the created Drupal site.",
                    "browser": "Runserver option: If opening a web browser, which browser to user (defaults to operating system default).",
                    "use-name": {
                        "hidden": true,
                        "description": "Overrides \"name\" argument."
                    },
                    "makefile": {
                        "description": "Makefile to use. Makefile must specify which version of Drupal core to build.",
                        "example-value": "mysite.make",
                        "value": "optional"
                    },
                    "root": {
                        "description": "Path to Drupal root.",
                        "example-value": "\/path\/to\/root",
                        "value": "optional"
                    },
                    "notes": "Download option: Show release notes after each project is downloaded.",
                    "variant": "Download option: Only useful for install profiles. Possible values: 'full', 'projects', 'profile-only'.",
                    "select": "Download option: Select the version to download interactively from a list of available releases.",
                    "skip": "Download option: Skip automatic downloading of libraries (c.f. devel).",
                    "pipe": "Download option: Returns a list of the names of the extensions (modules and themes) contained in the downloaded projects.",
                    "db-url": "Site install option: A Drupal 6 style database URL. Only required for initial install - not re-install.",
                    "db-prefix": "Site install option: An optional table prefix to use for initial install.  Can be a key-value array of tables\/prefixes in a drushrc file (not the command line).",
                    "db-su": "Site install option: Account to use when creating a new database. Must have Grant permission (mysql only). Optional.",
                    "db-su-pw": "Site install option: Password for the \"db-su\" account. Optional.",
                    "account-name": "Site install option: uid1 name. Defaults to admin",
                    "account-pass": "Site install option: uid1 pass. Defaults to a randomly generated password. If desired, set a fixed password in drushrc.php.",
                    "account-mail": "Site install option: uid1 email. Defaults to admin@example.com",
                    "locale": "Site install option: A short language code. Sets the default site language. Language files must already be present. You may use download command to get them.",
                    "clean-url": "Site install option: Defaults to 1",
                    "site-name": "Site install option: Defaults to Site-Install",
                    "site-mail": "Site install option: From: for system mailings. Defaults to admin@example.com",
                    "writable": "Site install option: Make CMI and other dirs writable by both web and CLI users. Suitable for non Prod environments.",
                    "keep-config": "Site install option: Keep CMI directories untouched. This preserves existing configuration.",
                    "variables": "Runserver option: Key-value array of variables to override in the $conf array for the running site. By default disables drupal_http_request_fails to avoid errors on Windows (which supports only one connection at a time). Comma delimited list of name=value pairs (or array in drushrc).",
                    "default-server": "Runserver option: A default addr:port\/path to use for any values not specified as an argument.",
                    "dns": "Runserver option: Resolve hostnames\/IPs using DNS\/rDNS (if possible) to determine binding IPs and\/or human friendly hostnames for URLs and browser.",
                    "version-control=backup": {
                        "description": "Backup all project files before updates."
                    },
                    "version-control=bzr": {
                        "description": "Quickly add\/remove\/commit your project changes to Bazaar."
                    },
                    "version-control=svn": {
                        "description": "Quickly add\/remove\/commit your project changes to Subversion."
                    },
                    "cache": "Cache release XML and tarballs or git clones. Git clones use git's --reference option. Defaults to 1 for downloads, and 0 for git.",
                    "package-handler=wget": {
                        "description": "Download project packages using wget or curl."
                    },
                    "package-handler=git_drupalorg": {
                        "description": "Use git.drupal.org to checkout and update projects."
                    },
                    "source": "The base URL which provides project release history in XML. Defaults to http:\/\/updates.drupal.org\/release-history.",
                    "dev": "Work with development releases solely."
                },
                "engines": {
                    "version_control": {
                        "option": "version-control",
                        "default": "backup",
                        "description": "Integrate with version control systems.",
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "add-options-to-command": false,
                        "combine-help": false,
                        "usable": [
                            "backup",
                            "bzr",
                            "svn"
                        ]
                    },
                    "package_handler": {
                        "option": "package-handler",
                        "description": "Determine how to fetch projects from update service.",
                        "default": "wget",
                        "options": {
                            "cache": "Cache release XML and tarballs or git clones. Git clones use git's --reference option. Defaults to 1 for downloads, and 0 for git."
                        },
                        "sub-options": [],
                        "config-aliases": [],
                        "add-options-to-command": false,
                        "combine-help": false,
                        "usable": [
                            "wget",
                            "git_drupalorg"
                        ]
                    },
                    "release_info": {
                        "add-options-to-command": true,
                        "description": "",
                        "option": false,
                        "default": null,
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "combine-help": false
                    }
                },
                "command": "core-quick-drupal",
                "command-hook": "core-quick-drupal",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": {
                    "version-control=backup": {
                        "no-backup": "Do not perform backups.",
                        "backup-dir": "Specify a directory to backup projects into. Defaults to drush-backups within the home directory of the user running the command. It is forbidden to specify a directory inside your drupal root."
                    },
                    "version-control=bzr": {
                        "bzrsync": "Automatically add new files to the Bazaar repository and remove deleted files. Caution.",
                        "bzrcommit": "Automatically commit changes to Bazaar repository. You must also use the --bzrsync option."
                    },
                    "bzrcommit": {
                        "bzrmessage": "Override default commit message which is: Drush automatic commit. Project \u003cname\u003e \u003ctype\u003e Command: \u003cthe drush command line used\u003e"
                    },
                    "version-control=svn": {
                        "svnsync": "Automatically add new files to the SVN repository and remove deleted files. Caution.",
                        "svncommit": "Automatically commit changes to SVN repository. You must also using the --svnsync option.",
                        "svnstatusparams": "Add options to the 'svn status' command",
                        "svnaddparams": "Add options to the `svn add` command",
                        "svnremoveparams": "Add options to the `svn remove` command",
                        "svnrevertparams": "Add options to the `svn revert` command",
                        "svncommitparams": "Add options to the `svn commit` command"
                    },
                    "svncommit": {
                        "svnmessage": "Override default commit message which is: Drush automatic commit: \u003cthe drush command line used\u003e"
                    },
                    "package-handler=wget": {
                        "no-md5": "Skip md5 validation of downloads."
                    },
                    "package-handler=git_drupalorg": {
                        "gitusername": "Your git username as shown on user\/[uid]\/edit\/git. Typically, this is set this in drushrc.php. Omitting this prevents users from pushing changes back to git.drupal.org.",
                        "gitsubmodule": "Use git submodules for checking out new projects. Existing git checkouts are unaffected, and will continue to (not) use submodules regardless of this setting.",
                        "gitcheckoutparams": "Add options to the `git checkout` command.",
                        "gitcloneparams": "Add options to the `git clone` command.",
                        "gitfetchparams": "Add options to the `git fetch` command.",
                        "gitpullparams": "Add options to the `git pull` command.",
                        "gitinfofile": "Inject version info into each .info file."
                    },
                    "gitsubmodule": {
                        "gitsubmoduleaddparams": "Add options to the `git submodule add` command."
                    },
                    "cache": {
                        "cache-duration-releasexml": "Expire duration (in seconds) for release XML. Defaults to 86400 (24 hours)."
                    },
                    "select": {
                        "all": "Shows all available releases instead of a short list of recent releases."
                    }
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "core-requirements": {
                "description": "Provides information about things that may be wrong in your Drupal installation, if any.",
                "aliases": [
                    "status-report",
                    "rq"
                ],
                "examples": {
                    "drush core-requirements": "Show all status lines from the Status Report admin page.",
                    "drush core-requirements --severity=2": "Show only the red lines from the Status Report admin page.",
                    "drush core-requirements --pipe": "Print out a short report in JSON format, where severity 2=error, 1=warning, and 0\/-1=OK"
                },
                "options": {
                    "severity": {
                        "description": "Only show status report messages with a severity greater than or equal to the specified value.",
                        "value": "required",
                        "example-value": "3"
                    },
                    "ignore": "Comma-separated list of requirements to remove from output. Run with --pipe to see key values to use.",
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "outputformat": {
                    "default": "table",
                    "pipe-format": "json",
                    "field-labels": {
                        "title": "Title",
                        "severity": "Severity",
                        "sid": "SID",
                        "description": "Description",
                        "value": "Summary",
                        "reason": "Reason",
                        "weight": "Weight"
                    },
                    "fields-default": [
                        "title",
                        "severity",
                        "description"
                    ],
                    "column-widths": {
                        "severity": 8
                    },
                    "concatenate-columns": {
                        "description": [
                            "value",
                            "description"
                        ]
                    },
                    "strip-tags": true,
                    "ini-item": "sid",
                    "key-value-item": "severity",
                    "list-metadata": {
                        "list-item": "severity"
                    },
                    "output-data-type": "format-table"
                },
                "command": "core-requirements",
                "command-hook": "core-requirements",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "table",
                        "pipe-format": "json",
                        "field-labels": {
                            "title": "Title",
                            "severity": "Severity",
                            "sid": "SID",
                            "description": "Description",
                            "value": "Summary",
                            "reason": "Reason",
                            "weight": "Weight"
                        },
                        "fields-default": [
                            "title",
                            "severity",
                            "description"
                        ],
                        "column-widths": {
                            "severity": 8
                        },
                        "concatenate-columns": {
                            "description": [
                                "value",
                                "description"
                            ]
                        },
                        "strip-tags": true,
                        "ini-item": "sid",
                        "key-value-item": "severity",
                        "list-metadata": {
                            "list-item": "severity"
                        },
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core",
                "bootstrap": 6
            },
            "core-rsync": {
                "description": "Rsync the Drupal tree to\/from another server using ssh.",
                "bootstrap": -1,
                "arguments": {
                    "source": "May be rsync path or site alias. See rsync documentation and example.aliases.drushrc.php.",
                    "destination": "May be rsync path or site alias. See rsync documentation and example.aliases.drushrc.php."
                },
                "options": {
                    "mode": "The unary flags to pass to rsync; --mode=rultz implies rsync -rultz.  Default is -akz.",
                    "exclude-conf": "Excludes settings.php from being rsynced.  Default.",
                    "include-conf": "Allow settings.php to be rsynced. Default is to exclude settings.php.",
                    "include-vcs": "Include special version control directories (e.g. .svn).  Default is to exclude vcs files.",
                    "exclude-files": "Exclude the files directory.",
                    "exclude-sites": "Exclude all directories in \"sites\/\" except for \"sites\/all\".",
                    "exclude-other-sites": "Exclude all directories in \"sites\/\" except for \"sites\/all\" and the site directory for the site being synced.  Note: if the site directory is different between the source and destination, use --exclude-sites followed by \"drush rsync @from:%site @to:%site\"",
                    "exclude-paths": "List of paths to exclude, seperated by : (Unix-based systems) or ; (Windows).",
                    "include-paths": "List of paths to include, seperated by : (Unix-based systems) or ; (Windows).",
                    "{rsync-option-name}": "Replace {rsync-option-name} with the rsync option (or option='value') that you would like to pass through to rsync. Examples include --delete, --exclude=*.sql, --filter='merge \/etc\/rsync\/default.rules', etc. See the rsync documentation for a complete explanation of all the rsync options and values.",
                    "rsync-version": "Set to the version of rsync you are using to signal Drush to go into backwards-compatibility mode when using very old versions of rsync. For example, --rsync-version=2.6.8 or earlier will cause Drush to avoid the --remove-source-files flag."
                },
                "strict-option-handling": true,
                "examples": {
                    "drush rsync @dev @stage": "Rsync Drupal root from Drush alias dev to the alias stage (one of which must be local).",
                    "drush rsync .\/ @stage:%files\/img": "Rsync all files in the current directory to the 'img' directory in the file storage folder on the Drush alias stage.",
                    "drush -s rsync @dev @stage --exclude=*.sql --delete": "Simulate Rsync Drupal root from the Drush alias dev to the alias stage (one of which must be local), excluding all files that match the filter '*.sql' and delete all files on the destination that are no longer on the source."
                },
                "aliases": [
                    "rsync"
                ],
                "topics": [
                    "docs-aliases"
                ],
                "command": "core-rsync",
                "command-hook": "core-rsync",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "core"
            },
            "core-status": {
                "description": "Provides a birds-eye view of the current Drupal installation, if any.",
                "bootstrap": -2,
                "aliases": [
                    "status",
                    "st"
                ],
                "examples": {
                    "drush core-status version": "Show all status lines that contain version information.",
                    "drush core-status --pipe": "A list key=value items separated by line breaks.",
                    "drush core-status drush-version --pipe": "Emit just the drush version with no label.",
                    "drush core-status config-active --pipe": "Emit just the active Config directory with no label."
                },
                "arguments": {
                    "item": "Optional.  The status item line(s) to display."
                },
                "options": {
                    "show-passwords": "Show database password.",
                    "full": "Show all file paths and drush aliases in the report, even if there are a lot.",
                    "project": {
                        "description": "One or more projects that should be added to the path list",
                        "example-value": "foo,bar"
                    },
                    "format": {
                        "description": "Select output format. Available: json, list, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "outputformat": {
                    "default": "key-value",
                    "pipe-format": "json",
                    "field-labels": {
                        "drupal-version": "Drupal version",
                        "uri": "Site URI",
                        "db-driver": "Database driver",
                        "db-hostname": "Database hostname",
                        "db-port": "Database port",
                        "db-username": "Database username",
                        "db-password": "Database password",
                        "db-name": "Database name",
                        "db-status": "Database",
                        "bootstrap": "Drupal bootstrap",
                        "user": "Drupal user",
                        "theme": "Default theme",
                        "admin-theme": "Administration theme",
                        "php-bin": "PHP executable",
                        "php-conf": "PHP configuration",
                        "php-os": "PHP OS",
                        "drush-script": "Drush script",
                        "drush-version": "Drush version",
                        "drush-temp": "Drush temp directory",
                        "drush-conf": "Drush configuration",
                        "drush-alias-files": "Drush alias files",
                        "install-profile": "Install profile",
                        "root": "Drupal root",
                        "site-path": "Site path",
                        "site": "Site path",
                        "themes": "Themes path",
                        "modules": "Modules path",
                        "files": "File directory path",
                        "private": "Private file directory path",
                        "temp": "Temporary file directory path",
                        "config-active": "Active config path",
                        "config-staging": "Staging config path",
                        "files-path": "File directory path",
                        "temp-path": "Temporary file directory path",
                        "%paths": "Other paths"
                    },
                    "formatted-filter": "_drush_core_status_format_table_data",
                    "private-fields": "db-password",
                    "simplify-single": true,
                    "table-metadata": {
                        "list-separator": " "
                    },
                    "output-data-type": "format-list"
                },
                "topics": [
                    "docs-readme"
                ],
                "command": "core-status",
                "command-hook": "core-status",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "key-value",
                        "pipe-format": "json",
                        "field-labels": {
                            "drupal-version": "Drupal version",
                            "uri": "Site URI",
                            "db-driver": "Database driver",
                            "db-hostname": "Database hostname",
                            "db-port": "Database port",
                            "db-username": "Database username",
                            "db-password": "Database password",
                            "db-name": "Database name",
                            "db-status": "Database",
                            "bootstrap": "Drupal bootstrap",
                            "user": "Drupal user",
                            "theme": "Default theme",
                            "admin-theme": "Administration theme",
                            "php-bin": "PHP executable",
                            "php-conf": "PHP configuration",
                            "php-os": "PHP OS",
                            "drush-script": "Drush script",
                            "drush-version": "Drush version",
                            "drush-temp": "Drush temp directory",
                            "drush-conf": "Drush configuration",
                            "drush-alias-files": "Drush alias files",
                            "install-profile": "Install profile",
                            "root": "Drupal root",
                            "site-path": "Site path",
                            "site": "Site path",
                            "themes": "Themes path",
                            "modules": "Modules path",
                            "files": "File directory path",
                            "private": "Private file directory path",
                            "temp": "Temporary file directory path",
                            "config-active": "Active config path",
                            "config-staging": "Staging config path",
                            "files-path": "File directory path",
                            "temp-path": "Temporary file directory path",
                            "%paths": "Other paths"
                        },
                        "formatted-filter": "_drush_core_status_format_table_data",
                        "private-fields": "db-password",
                        "simplify-single": true,
                        "table-metadata": {
                            "list-separator": " "
                        },
                        "require-engine-capability": [
                            "format-list"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv-or-string",
                            "key-value",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "var_export",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=var_export": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "core"
            },
            "core-topic": {
                "description": "Read detailed documentation on a given topic.",
                "arguments": {
                    "topic name": "The name of the topic you wish to view. If omitted, list all topic descriptions (and names in parenthesis)."
                },
                "examples": {
                    "drush topic": "Show all available topics.",
                    "drush topic docs-context": "Show documentation for the drush context API",
                    "drush docs-context": "Show documentation for the drush context API"
                },
                "bootstrap": -1,
                "remote-tty": true,
                "aliases": [
                    "topic"
                ],
                "topics": [
                    "docs-readme"
                ],
                "command": "core-topic",
                "command-hook": "core-topic",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "topic",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "core"
            },
            "drupal-directory": {
                "description": "Return the filesystem path for modules\/themes and other key folders.",
                "arguments": {
                    "target": "A module\/theme name, or special names like root, files, private, or an alias : path alias string such as @alias:%files. Defaults to root."
                },
                "options": {
                    "component": "The portion of the evaluated path to return.  Defaults to 'path'; 'name' returns the site alias of the target.",
                    "local-only": "Reject any target that specifies a remote site."
                },
                "examples": {
                    "cd `drush dd devel`": "Navigate into the devel module directory",
                    "cd `drush dd` ": "Navigate to the root of your Drupal site",
                    "cd `drush dd files`": "Navigate to the files directory.",
                    "drush dd @alias:%files": "Print the path to the files directory on the site @alias.",
                    "edit `drush dd devel`\/devel.module": "Open devel module in your editor (customize 'edit' for your editor)"
                },
                "aliases": [
                    "dd"
                ],
                "bootstrap": -1,
                "command": "drupal-directory",
                "command-hook": "drupal-directory",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "help": {
                "description": "Print this help message. See `drush help help` for more options.",
                "bootstrap": -1,
                "allow-additional-options": true,
                "options": {
                    "sort": "Sort commands in alphabetical order. Drush waits for full bootstrap before printing any commands when this option is used.",
                    "filter": {
                        "description": "Restrict command list to those commands defined in the specified file. Omit value to choose from a list of names.",
                        "example-value": "category",
                        "value": "optional"
                    },
                    "format": "Format to output . Allowed values are: json, var_export, html.",
                    "html": "Print help for all commands in HTML format. Deprecated - see --format option.",
                    "pipe": "A list of available commands, one per line."
                },
                "arguments": {
                    "command": "A command name, or command alias."
                },
                "examples": {
                    "drush": "List all commands.",
                    "drush --filter=devel_generate": "Show only commands defined in devel_generate.drush.inc",
                    "drush help pm-download": "Show help for one command.",
                    "drush help dl": "Show help for one command using an alias."
                },
                "topics": [
                    "docs-readme"
                ],
                "command": "help",
                "command-hook": "help",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "global-options": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "core"
            },
            "image-derive": {
                "description": "Create an image derivative.",
                "core": [
                    "7+"
                ],
                "drupal dependencies": [
                    "image"
                ],
                "arguments": {
                    "style": "An image style machine name.",
                    "source": "Path to a source image. Optionally prepend stream wrapper scheme."
                },
                "required arguments": true,
                "options": [],
                "examples": {
                    "drush image-derive thumbnail themes\/bartik\/logo.png": "Save thumbnail sized derivative of logo image."
                },
                "aliases": [
                    "id"
                ],
                "command": "image-derive",
                "command-hook": "image-derive",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "image",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core",
                "bootstrap": 6
            },
            "image-flush": {
                "description": "Flush all derived images for a given style.",
                "core": [
                    "7+"
                ],
                "arguments": {
                    "style": "An image style machine name. If not provided, user may choose from a list of names."
                },
                "options": {
                    "all": "Flush all derived images"
                },
                "examples": {
                    "drush image-flush": "Pick an image style and then delete its images.",
                    "drush image-flush thumbnail": "Delete all thumbnail images.",
                    "drush image-flush --all": "Flush all derived images. They will be regenerated on the fly."
                },
                "aliases": [
                    "if"
                ],
                "command": "image-flush",
                "command-hook": "image-flush",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "image",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core",
                "bootstrap": 6
            },
            "php-eval": {
                "description": "Evaluate arbitrary php code after bootstrapping Drupal (if available).",
                "examples": {
                    "drush php-eval 'variable_set(\"hello\", \"world\");'": "Sets the hello variable using Drupal API.",
                    "drush php-eval '$node = node_load(1); print $node-\u003etitle;'": "Loads node with nid 1 and then prints its title.",
                    "drush php-eval \"file_unmanaged_copy('$HOME\/Pictures\/image.jpg', 'public:\/\/image.jpg');\"": "Copies a file whose path is determined by an environment's variable. Note the use of double quotes so the variable $HOME gets replaced by its value."
                },
                "arguments": {
                    "code": "PHP code"
                },
                "required-arguments": true,
                "allow-additional-options": true,
                "bootstrap": -2,
                "aliases": [
                    "eval",
                    "ev"
                ],
                "outputformat": {
                    "default": "var_export"
                },
                "command": "php-eval",
                "command-hook": "php-eval",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "var_export",
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "string",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, csv, list, string, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=string": {
                        "description": "A simple string.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=string": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "php-script": {
                "description": "Run php script(s).",
                "examples": {
                    "drush php-script scratch": "Run scratch.php script. See commands\/core directory.",
                    "drush php-script example --script-path=\/path\/to\/scripts:\/another\/path": "Run script from specified paths",
                    "drush php-script": "List all available scripts.",
                    "": "",
                    "#!\/usr\/bin\/env drush\n\u003c?php\nvariable_set('key', drush_shift());": "Execute php code with a full Drupal bootstrap directly from a shell script."
                },
                "arguments": {
                    "filename": "Optional. The file you wish to execute (without extension). If omitted, list files ending in .php in the current working directory and specified script-path. Some might not be real drush scripts. Beware."
                },
                "options": {
                    "script-path": {
                        "description": "Additional paths to search for scripts, separated by : (Unix-based systems) or ; (Windows).",
                        "example-value": "~\/scripts"
                    }
                },
                "allow-additional-options": true,
                "bootstrap": -2,
                "aliases": [
                    "scr"
                ],
                "topics": [
                    "docs-examplescript",
                    "docs-scripts"
                ],
                "command": "php-script",
                "command-hook": "php-script",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "core"
            },
            "queue-list": {
                "description": "Returns a list of all defined queues",
                "outputformat": {
                    "default": "table",
                    "pipe-format": "csv",
                    "field-labels": {
                        "queue": "Queue",
                        "items": "Items",
                        "class": "Class"
                    },
                    "ini-item": "items",
                    "table-metadata": {
                        "key-value-item": "items"
                    },
                    "output-data-type": "format-table"
                },
                "command": "queue-list",
                "command-hook": "queue-list",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "queue",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "table",
                        "pipe-format": "csv",
                        "field-labels": {
                            "queue": "Queue",
                            "items": "Items",
                            "class": "Class"
                        },
                        "ini-item": "items",
                        "table-metadata": {
                            "key-value-item": "items"
                        },
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core",
                "bootstrap": 6
            },
            "queue-run": {
                "description": "Run a specific queue by name",
                "arguments": {
                    "queue_name": "The name of the queue to run, as defined in either hook_queue_info or hook_cron_queue_info."
                },
                "required-arguments": true,
                "command": "queue-run",
                "command-hook": "queue-run",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "queue",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core",
                "bootstrap": 6
            },
            "shell-alias": {
                "description": "Print all known shell alias records.",
                "bootstrap": -1,
                "arguments": {
                    "alias": "Shell alias to print"
                },
                "outputformat": {
                    "default": "key-value",
                    "pipe-format": "json",
                    "simplify-single": true,
                    "output-data-type": "format-list"
                },
                "aliases": [
                    "sha"
                ],
                "examples": {
                    "drush shell-alias": "List all alias records known to drush.",
                    "drush shell-alias pull": "Print the value of the shell alias 'pull'."
                },
                "command": "shell-alias",
                "command-hook": "shell-alias",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "shellalias",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "key-value",
                        "pipe-format": "json",
                        "simplify-single": true,
                        "require-engine-capability": [
                            "format-list"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv-or-string",
                            "key-value",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "var_export",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, list, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=var_export": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "site-alias": {
                "callback": "drush_command",
                "description": "Print site alias records for all known site aliases and local sites.",
                "bootstrap": -1,
                "arguments": {
                    "site": "Site specification to print"
                },
                "options": {
                    "with-db": "Include the databases structure in the full alias record.",
                    "with-db-url": "Include the short-form db-url in the full alias record.",
                    "no-db": "Do not include the database record in the full alias record (default).",
                    "with-optional": "Include optional default items.",
                    "alias-name": "For a single alias, set the name to use in the output.",
                    "local-only": "Only display sites that are available on the local system (remote-site not set, and Drupal root exists).",
                    "show-hidden": "Include hidden internal elements in site alias output",
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "outputformat": {
                    "default": "config",
                    "pipe-format": "var_export",
                    "variable-name": "aliases",
                    "hide-empty-fields": true,
                    "private-fields": "password",
                    "field-labels": {
                        "#name": "Name",
                        "root": "Root",
                        "uri": "URI",
                        "remote-host": "Host",
                        "remote-user": "User",
                        "remote-port": "Port",
                        "os": "OS",
                        "ssh-options": "SSH options",
                        "php": "PHP"
                    },
                    "fields-default": [
                        "#name",
                        "root",
                        "uri",
                        "remote-host",
                        "remote-user"
                    ],
                    "field-mappings": {
                        "name": "#name"
                    },
                    "output-data-type": "format-table"
                },
                "aliases": [
                    "sa"
                ],
                "examples": {
                    "drush site-alias": "List all alias records known to drush.",
                    "drush site-alias @dev": "Print an alias record for the alias 'dev'.",
                    "drush @none site-alias": "Print only actual aliases; omit multisites from the local Drupal installation."
                },
                "topics": [
                    "docs-aliases"
                ],
                "command": "site-alias",
                "command-hook": "site-alias",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "sitealias",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "config",
                        "pipe-format": "var_export",
                        "variable-name": "aliases",
                        "hide-empty-fields": true,
                        "private-fields": "password",
                        "field-labels": {
                            "#name": "Name",
                            "root": "Root",
                            "uri": "URI",
                            "remote-host": "Host",
                            "remote-user": "User",
                            "remote-port": "Port",
                            "os": "OS",
                            "ssh-options": "SSH options",
                            "php": "PHP"
                        },
                        "fields-default": [
                            "#name",
                            "root",
                            "uri",
                            "remote-host",
                            "remote-user"
                        ],
                        "field-mappings": {
                            "name": "#name"
                        },
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "primary function": "drush_sitealias_print",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "core"
            },
            "site-install": {
                "description": "Install Drupal along with modules\/themes\/configuration using the specified install profile.",
                "arguments": {
                    "profile": "The install profile you wish to run. Defaults to 'default' in D6, 'standard' in D7+, unless an install profile is marked as exclusive (or as a distribution in D8+ terminology) in which case that is used.",
                    "key=value...": "Any additional settings you wish to pass to the profile. Fully supported on D7+, partially supported on D6 (single step configure forms only). The key is in the form [form name].[parameter name] on D7 or just [parameter name] on D6."
                },
                "options": {
                    "db-url": {
                        "description": "A Drupal 6 style database URL. Only required for initial install - not re-install.",
                        "example-value": "mysql:\/\/root:pass@host\/db"
                    },
                    "db-prefix": "An optional table prefix to use for initial install.  Can be a key-value array of tables\/prefixes in a drushrc file (not the command line).",
                    "db-su": {
                        "description": "Account to use when creating a new database. Must have Grant permission (mysql only). Optional.",
                        "example-value": "root"
                    },
                    "db-su-pw": {
                        "description": "Password for the \"db-su\" account. Optional.",
                        "example-value": "pass"
                    },
                    "account-name": "uid1 name. Defaults to admin",
                    "account-pass": "uid1 pass. Defaults to a randomly generated password. If desired, set a fixed password in drushrc.php.",
                    "account-mail": "uid1 email. Defaults to admin@example.com",
                    "locale": {
                        "description": "A short language code. Sets the default site language. Language files must already be present. You may use download command to get them.",
                        "example-value": "en-GB"
                    },
                    "clean-url": "Defaults to 1",
                    "site-name": "Defaults to Site-Install",
                    "site-mail": "From: for system mailings. Defaults to admin@example.com",
                    "sites-subdir": {
                        "description": "Name of directory under 'sites' which should be created. Only needed when the subdirectory does not already exist. Defaults to 'default'",
                        "value": "required",
                        "example-value": "directory_name"
                    },
                    "writable": "Make CMI and other dirs writable by both web and CLI users. Suitable for non Prod environments.",
                    "keep-config": "Keep CMI directories untouched. This preserves existing configuration."
                },
                "examples": {
                    "drush site-install expert --locale=uk": "(Re)install using the expert install profile. Set default language to Ukrainian.",
                    "drush site-install --db-url=mysql:\/\/root:pass@localhost:port\/dbname": "Install using the specified DB params.",
                    "drush site-install --db-url=sqlite:\/\/sites\/example.com\/files\/.ht.sqlite": "Install using SQLite (D7+ only).",
                    "drush site-install --account-name=joe --account-pass=mom": "Re-install with specified uid1 credentials.",
                    "drush site-install standard install_configure_form.site_default_country=FR my_profile_form.my_settings.key=value": "Pass additional arguments to the profile (D7 example shown here - for D6, omit the form id).",
                    "drush site-install install_configure_form.update_status_module='array(FALSE,FALSE)'": "Disable email notification during install and later. If your server has no smtp, this gets rid of an error during install."
                },
                "bootstrap": 1,
                "aliases": [
                    "si"
                ],
                "command": "site-install",
                "command-hook": "site-install",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "site_install",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "site-set": {
                "description": "Set a site alias to work on that will persist for the current session.",
                "bootstrap": -1,
                "handle-remote-commands": true,
                "arguments": {
                    "site": "Site specification to use, or \"-\" for previous site. Omit this argument to \"unset\""
                },
                "aliases": [
                    "use"
                ],
                "examples": {
                    "drush site-set @dev": "Set the current session to use the @dev alias.",
                    "drush site-set user@server\/path\/to\/drupal#sitename": "Set the current session to use a site specification.",
                    "drush site-set -": "Go back to the previously-set site (like `cd -`).",
                    "drush site-set": "Without an argument, any existing site becomes unset."
                },
                "command": "site-set",
                "command-hook": "site-set",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "sitealias",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "site-ssh": {
                "description": "Connect to a Drupal site's server via SSH for an interactive session or to run a shell command",
                "arguments": {
                    "bash": "Bash to execute on target. Optional, except when site-alias is a list."
                },
                "options": {
                    "cd": "Directory to change to. Use a full path, TRUE for the site's Drupal root directory, or FALSE for the remote user's home directory. Defaults to the Drupal root.",
                    "ssh-options": "A string of extra options that will be passed to the ssh command (e.g. \"-p 100\")",
                    "tty": "Create a tty (e.g. to run an interactive program).",
                    "escaped": "Command string already escaped; do not add additional quoting."
                },
                "handle-remote-commands": true,
                "strict-option-handling": true,
                "examples": {
                    "drush @mysite ssh": "Open an interactive shell on @mysite's server.",
                    "drush @prod ssh 'ls \/tmp'": "Run \"ls \/tmp\" on @prod site. If @prod is a site list, then ls will be executed on each site.",
                    "drush @prod git pull": "Run \"git pull\" on the Drupal root directory on the @prod site."
                },
                "aliases": [
                    "ssh"
                ],
                "bootstrap": -1,
                "topics": [
                    "docs-aliases"
                ],
                "command": "site-ssh",
                "command-hook": "site-ssh",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "ssh",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "remote-tty": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "core"
            },
            "updatedb": {
                "description": "Apply any database updates required (as with running update.php).",
                "bootstrap": 2,
                "global-options": [
                    "cache-clear"
                ],
                "aliases": [
                    "updb"
                ],
                "command": "updatedb",
                "command-hook": "updatedb",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "updatedb-status": {
                "description": "List any pending database updates.",
                "outputformat": {
                    "default": "table",
                    "pipe-format": "csv",
                    "field-labels": {
                        "module": "Module",
                        "update_id": "Update ID",
                        "description": "Description"
                    },
                    "fields-default": [
                        "module",
                        "update_id",
                        "description"
                    ],
                    "output-data-type": "format-table"
                },
                "aliases": [
                    "updbst"
                ],
                "command": "updatedb-status",
                "command-hook": "updatedb-status",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "table",
                        "pipe-format": "csv",
                        "field-labels": {
                            "module": "Module",
                            "update_id": "Update ID",
                            "description": "Description"
                        },
                        "fields-default": [
                            "module",
                            "update_id",
                            "description"
                        ],
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core",
                "bootstrap": 6
            },
            "usage-send": {
                "bootstrap": -1,
                "description": "Send anonymous Drush usage information to statistics logging site.  Usage statistics contain the Drush command name and the Drush option names, but no arguments or option values.",
                "examples": {
                    "drush usage-send": "Immediately send cached usage statistics.",
                    "$options['drush_usage_send']  = TRUE;": "Specify in a .drushrc.php file that usage information should be sent.",
                    "$options['drush_usage_size']  = 10240;": "Specify the frequency (file size) that usage information should be sent."
                },
                "aliases": [
                    "usend"
                ],
                "command": "usage-send",
                "command-hook": "usage-send",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "usage",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "usage-show": {
                "bootstrap": -1,
                "description": "Show Drush usage information that has been logged but not sent.  Usage statistics contain the Drush command name and the Drush option names, but no arguments or option values.",
                "examples": {
                    "drush usage-show": "Show cached usage statistics.",
                    "$options['drush_usage_log']  = TRUE;": "Specify in a .drushrc.php file that usage information should be logged locally in a usage statistics file."
                },
                "aliases": [
                    "ushow"
                ],
                "command": "usage-show",
                "command-hook": "usage-show",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "usage",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            },
            "variable-delete": {
                "core": [
                    6,
                    7
                ],
                "description": "Delete a variable.",
                "arguments": {
                    "name": "The name of a variable or the first few letters of its name."
                },
                "required-arguments": true,
                "options": {
                    "yes": "Skip confirmation if only one variable name matches.",
                    "exact": "Only delete the one variable that exactly matches the specified name."
                },
                "examples": {
                    "drush vdel user_pictures": "Delete the user_pictures variable.",
                    "drush vdel u": "Choose from a list of variables beginning with \"u\" to delete.",
                    "drush vdel -y --exact maintenance_mode": "Bring the site back online, skipping confirmation. Variable is rewritten to site_offline for Drupal 6."
                },
                "aliases": [
                    "vdel"
                ],
                "command": "variable-delete",
                "command-hook": "variable-delete",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "variable",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core",
                "bootstrap": 6
            },
            "variable-get": {
                "description": "Get a list of some or all site variables and values.",
                "core": [
                    6,
                    7
                ],
                "arguments": {
                    "name": "A string to filter the variables by. Variables whose name contains the string will be listed."
                },
                "examples": {
                    "drush vget": "List all variables and values.",
                    "drush vget user": "List all variables containing the string \"user\".",
                    "drush vget site_mail --exact": "Show only the value of the variable with the exact key \"site_mail\".",
                    "drush vget site_mail --exact --pipe": "Show only the variable with the exact key \"site_mail\" without changing the structure of the output."
                },
                "options": {
                    "exact": "Only get the one variable that exactly matches the specified name.  Output will contain only the variable's value.",
                    "format": {
                        "description": "Select output format. Available: json, csv, list, string, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=string": {
                        "description": "A simple string.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "outputformat": {
                    "default": "yaml",
                    "pipe-format": "config",
                    "variable-name": "variables",
                    "table-metadata": {
                        "format": "var_export"
                    }
                },
                "aliases": [
                    "vget"
                ],
                "command": "variable-get",
                "command-hook": "variable-get",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "variable",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "yaml",
                        "pipe-format": "config",
                        "variable-name": "variables",
                        "table-metadata": {
                            "format": "var_export"
                        },
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "string",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=string": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core",
                "bootstrap": 6
            },
            "variable-set": {
                "description": "Set a variable.",
                "core": [
                    6,
                    7
                ],
                "arguments": {
                    "name": "The name of a variable or the first few letters of its name.",
                    "value": "The value to assign to the variable. Use '-' to read the object from STDIN."
                },
                "required-arguments": true,
                "options": {
                    "yes": "Skip confirmation if only one variable name matches.",
                    "always-set": {
                        "description": "Older synonym for --exact; deprecated.",
                        "hidden": true
                    },
                    "exact": "The exact name of the variable to set has been provided; do not prompt for similarly-named variables.",
                    "format": {
                        "description": "Format to parse the object. Use \"auto\" to detect format from value (default), \"string\", \"integer\" or \"boolean\" for corresponding primitive type, and \"json\" for JSON.",
                        "example-value": "boolean"
                    }
                },
                "examples": {
                    "drush vset --yes preprocess_css TRUE": "Set the preprocess_css variable to true. Skip confirmation if variable already exists.",
                    "drush vset --exact maintenance_mode 1": "Take the site offline; skips confirmation even if maintenance_mode variable does not exist. Variable is rewritten to site_offline for Drupal 6.",
                    "drush vset pr TRUE": "Choose from a list of variables beginning with \"pr\" to set to (bool)true.",
                    "php -r \"print json_encode(array('drupal', 'simpletest'));\"  | drush vset --format=json project_dependency_excluded_dependencies -": "Set a variable to a complex value (e.g. array)"
                },
                "aliases": [
                    "vset"
                ],
                "command": "variable-set",
                "command-hook": "variable-set",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "variable",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core",
                "bootstrap": 6
            },
            "version": {
                "description": "Show drush version.",
                "bootstrap": -1,
                "options": {
                    "pipe": "Print just the version number, and nothing else.",
                    "format": {
                        "description": "Select output format. Available: json, string, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=string": {
                        "description": "A simple string.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "outputformat": {
                    "default": "key-value",
                    "pipe-format": "string",
                    "label": "Drush Version",
                    "output-data-type": "format-single"
                },
                "command": "version",
                "command-hook": "version",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "core",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "key-value",
                        "pipe-format": "string",
                        "label": "Drush Version",
                        "require-engine-capability": [
                            "format-single"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "csv-or-string",
                            "key-value",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "string",
                            "var_export",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": {
                    "format=json": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=string": [],
                    "format=var_export": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "core"
            }
        }
    },
    "ctools": {
        "title": "CTools commands",
        "commands": {
            "ctools-export": {
                "aliases": [
                    "ctex"
                ],
                "callback": "drush_command",
                "description": "Export multiple CTools exportable objects directly to code.",
                "arguments": {
                    "module": "Name of your module."
                },
                "options": {
                    "subdir": "The name of the sub directory to create the module in. Defaults to ctools_export which will be placed into sites\/all\/modules.",
                    "remove": "Remove existing files before writing, except the .module file.",
                    "filter": "Filter the list of exportables by status. Available options are enabled, disabled, overridden, database, code and all. Defaults to enabled.",
                    "tables": "Comma separated list of exportable table names to filter by."
                },
                "examples": {
                    "drush ctex export_module": "Export CTools exportables to a module called \"export_module\".",
                    "drush ctex export_module --subdir=exports": "Same as above, but into the sites\/all\/modules\/exports directory.",
                    "drush ctex export_module --subdir=exports --remove": "Same as above, but automatically removing all files, except for the .module file.",
                    "drush ctex --filter=\"views_view\"": "Filter export selection to the views_view table only."
                },
                "command": "ctools-export",
                "command-hook": "ctools-export",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "ctools",
                "path": "\/Users\/mbell\/.drush\/ctools\/drush",
                "engines": [],
                "primary function": "ctools_drush_export",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "ctools",
                "bootstrap": 6
            },
            "ctools-export-disable": {
                "aliases": [
                    "cted"
                ],
                "callback": "drush_command",
                "description": "Disable CTools exportables.",
                "arguments": {
                    "table name": "Base table of the exportable you want to disable.",
                    "machine names": "Space separated list of exportables you want to disable."
                },
                "options": {
                    "module": "Filter the list of exportables by module. This will come from the 'export_module' key on the exportable.",
                    "all": "Perform this operation all CTools exportables available on the system (all tables)."
                },
                "examples": {
                    "drush ctools-export-disable views_view": "Disable all overridden views exportable objects.",
                    "drush ctools-export-disable views_view archive": "Disable overridden default views archive view."
                },
                "command": "ctools-export-disable",
                "command-hook": "ctools-export-disable",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "ctools",
                "path": "\/Users\/mbell\/.drush\/ctools\/drush",
                "engines": [],
                "primary function": "ctools_drush_export_op_command",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "ctools",
                "bootstrap": 6
            },
            "ctools-export-enable": {
                "aliases": [
                    "ctee"
                ],
                "callback": "drush_command",
                "description": "Enable CTools exportables.",
                "arguments": {
                    "table name": "Base table of the exportable you want to enable.",
                    "machine names": "Space separated list of exportables you want to enable."
                },
                "options": {
                    "module": "Filter the list of exportables by module. This will come from the 'export_module' key on the exportable.",
                    "all": "Perform this operation all CTools exportables available on the system (all tables)."
                },
                "examples": {
                    "drush ctools-export-enable views_view": "Enable all overridden views exportable objects.",
                    "drush ctools-export-enable views_view archive": "Enable overridden default views archive view."
                },
                "command": "ctools-export-enable",
                "command-hook": "ctools-export-enable",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "ctools",
                "path": "\/Users\/mbell\/.drush\/ctools\/drush",
                "engines": [],
                "primary function": "ctools_drush_export_op_command",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "ctools",
                "bootstrap": 6
            },
            "ctools-export-info": {
                "aliases": [
                    "ctei"
                ],
                "callback": "drush_command",
                "description": "Show available CTools exportable objects.",
                "arguments": [],
                "options": {
                    "format": "Display exportables info in a different format such as print_r, json, export. The default is to show in a tabular format.",
                    "tables-only": "Only show list of exportable types\/table names and not available objects.",
                    "filter": "Filter the list of exportables by status. Available options are enabled, disabled, overridden, database, and code.",
                    "module": "Filter the list of exportables by module. This will come from the 'export_module' key on the exportable."
                },
                "examples": {
                    "drush ctools-export-info": "View export info on all exportables.",
                    "drush ctools-export-info views_view variable": "View export info for views_view and variable exportable types only.",
                    "drush ctei --filter=enabled": "Show all enabled exportables.",
                    "drush ctei views_view --filter=disabled": "Show all enabled exportables.",
                    "drush ctei views_view --module=node": "Show all exportables provided by\/on behalf of the node module."
                },
                "command": "ctools-export-info",
                "command-hook": "ctools-export-info",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "ctools",
                "path": "\/Users\/mbell\/.drush\/ctools\/drush",
                "engines": [],
                "primary function": "ctools_drush_export_info",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "ctools",
                "bootstrap": 6
            },
            "ctools-export-revert": {
                "aliases": [
                    "cter"
                ],
                "callback": "drush_command",
                "description": "Revert CTools exportables from changes overridden in the database.",
                "arguments": {
                    "table name": "Base table of the exportable you want to revert.",
                    "machine names": "Space separated list of exportables you want to revert."
                },
                "options": {
                    "module": "Filter the list of exportables by module. This will come from the 'export_module' key on the exportable.",
                    "all": "Perform this operation all CTools exportables available on the system (all tables)."
                },
                "examples": {
                    "drush ctools-export-revert views_view": "Revert all overridden views exportable objects.",
                    "drush ctools-export-revert views_view archive": "Revert overridden default views archive view.",
                    "drush ctools-export-revert --all": "Revert all exportables on the system."
                },
                "command": "ctools-export-revert",
                "command-hook": "ctools-export-revert",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "ctools",
                "path": "\/Users\/mbell\/.drush\/ctools\/drush",
                "engines": [],
                "primary function": "ctools_drush_export_op_command",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "ctools",
                "bootstrap": 6
            },
            "ctools-export-view": {
                "aliases": [
                    "ctev"
                ],
                "callback": "drush_command",
                "description": "View CTools exportable object code output.",
                "arguments": {
                    "table name": "Base table of the exportable you want to view.",
                    "machine names": "Space separated list of exportables you want to view."
                },
                "options": {
                    "indent": "The string to use for indentation when dispalying the exportable export code. Defaults to ''.",
                    "no-colour": "Remove any colour formatting from export string output. Ideal if you are sending the output of this command to a file.",
                    "module": "Filter the list of exportables by module. This will come from the 'export_module' key on the exportable.",
                    "all": "Perform this operation all CTools exportables available on the system (all tables)."
                },
                "examples": {
                    "drush ctools-export-view views_view": "View all views exportable objects.",
                    "drush ctools-export-view views_view archive": "View default views archive view."
                },
                "command": "ctools-export-view",
                "command-hook": "ctools-export-view",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "ctools",
                "path": "\/Users\/mbell\/.drush\/ctools\/drush",
                "engines": [],
                "primary function": "ctools_drush_export_op_command",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "ctools",
                "bootstrap": 6
            }
        }
    },
    "cache": {
        "title": "Cache commands",
        "summary": "Interact with Drupal's cache API.",
        "commands": {
            "cache-clear": {
                "bootstrap": -2,
                "description": "Clear a specific cache, or all drupal caches.",
                "arguments": {
                    "type": "The particular cache to clear. Omit this argument to choose from available caches."
                },
                "callback": "drush_command",
                "aliases": [
                    "cc"
                ],
                "command": "cache-clear",
                "command-hook": "cache-clear",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "cache",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "primary function": "drush_cache_command_clear",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "cache"
            },
            "cache-get": {
                "description": "Fetch a cached object and display it.",
                "examples": {
                    "drush cache-get schema": "Display the data for the cache id \"schema\" from the \"cache\" bin.",
                    "drush cache-get update_available_releases update": "Display the data for the cache id \"update_available_releases\" from the \"update\" bin."
                },
                "arguments": {
                    "cid": "The id of the object to fetch.",
                    "bin": "Optional. The cache bin to fetch from."
                },
                "required-arguments": 1,
                "callback": "drush_command",
                "outputformat": {
                    "default": "print-r",
                    "pipe-format": "var_export",
                    "output-data-type": true
                },
                "aliases": [
                    "cg"
                ],
                "command": "cache-get",
                "command-hook": "cache-get",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "cache",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "print-r",
                        "pipe-format": "var_export",
                        "require-engine-capability": true,
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "csv-or-string",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "var_export",
                            "yaml"
                        ]
                    }
                },
                "primary function": "drush_cache_command_get",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=var_export": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "cache",
                "bootstrap": 6
            },
            "cache-rebuild": {
                "description": "Rebuild a Drupal 8 site and clear all its caches.",
                "options": [],
                "arguments": [],
                "bootstrap": 2,
                "core": [
                    "8+"
                ],
                "aliases": [
                    "cr",
                    "rebuild"
                ],
                "command": "cache-rebuild",
                "command-hook": "cache-rebuild",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "cache",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "cache"
            },
            "cache-set": {
                "description": "Cache an object expressed in JSON or var_export() format.",
                "arguments": {
                    "cid": "The id of the object to set.",
                    "data": "The object to set in the cache. Use '-' to read the object from STDIN.",
                    "bin": "Optional. The cache bin to store the object in.",
                    "expire": "Optional. CACHE_PERMANENT, CACHE_TEMPORARY, or a Unix timestamp.",
                    "tags": "An array of cache tags."
                },
                "required-arguments": 2,
                "options": {
                    "format": "Format to parse the object. Use \"string\" for string (default), and \"json\" for JSON.",
                    "cache-get": "If the object is the result a previous fetch from the cache, only store the value in the \"data\" property of the object in the cache."
                },
                "callback": "drush_command",
                "aliases": [
                    "cs"
                ],
                "command": "cache-set",
                "command-hook": "cache-set",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "cache",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "primary function": "drush_cache_command_set",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "cache",
                "bootstrap": 6
            }
        }
    },
    "config": {
        "title": "Config commands",
        "summary": "Interact with the configuration system.",
        "commands": {
            "config-edit": {
                "description": "Open a config file in a text editor. Edits are imported into active configration after closing editor.",
                "core": [
                    "8+"
                ],
                "aliases": [
                    "cedit"
                ],
                "arguments": {
                    "config-name": "The config object name, for example \"system.site\"."
                },
                "options": {
                    "bg": "Run editor in the background. Does not work with editors such as `vi` that run in the terminal. Supresses config-import at the end.",
                    "file": "Import from a file instead of interactively editing a given config."
                },
                "examples": {
                    "drush config-edit image.style.large": "Edit the image style configurations.",
                    "drush config-edit": "Choose a config file to edit.",
                    "drush config-edit --choice=2": "Edit the second file in the choice list.",
                    "drush --bg config-edit image.style.large": "Return to shell prompt as soon as the editor window opens."
                },
                "command": "config-edit",
                "command-hook": "config-edit",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "config",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "config",
                "bootstrap": 6
            },
            "config-export": {
                "description": "Export config from the active directory.",
                "core": [
                    "8+"
                ],
                "aliases": [
                    "cex"
                ],
                "arguments": {
                    "label": "A config directory label (i.e. a key in $config_directories array in settings.php). Defaults to 'staging'"
                },
                "options": {
                    "add": "Run `git add -p` after exporting. This lets you choose which config changes to stage for commit.",
                    "commit": "Run `git add -A` and `git commit` after exporting.  This commits everything that was exported without prompting.",
                    "message": "Commit comment for the exported configuration.  Optional; may only be used with --commit or --push.",
                    "push": "Run `git push` after committing.  Implies --commit.",
                    "remote": {
                        "description": "The remote git branch to use to push changes.  Defaults to \"origin\".",
                        "example-value": "origin"
                    },
                    "branch": {
                        "description": "Make commit on provided working branch. Ignored if used without --commit or --push.",
                        "example-value": "branchname"
                    },
                    "destination": "An arbitrary directory that should receive the exported files. An alternative to label argument"
                },
                "command": "config-export",
                "command-hook": "config-export",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "config",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "config",
                "bootstrap": 6
            },
            "config-get": {
                "description": "Display a config value, or a whole configuration object.",
                "arguments": {
                    "config-name": "The config object name, for example \"system.site\".",
                    "key": "The config key, for example \"page.front\". Optional."
                },
                "required-arguments": 1,
                "options": {
                    "source": {
                        "description": "The config storage source to read. recognized values are 'active 'and 'staging'.",
                        "example-value": "active",
                        "value": "required"
                    },
                    "include-overridden": {
                        "description": "Include overridden values."
                    },
                    "format": {
                        "description": "Select output format. Available: json, csv, list, string, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=string": {
                        "description": "A simple string.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "examples": {
                    "drush config-get system.site": "Displays the system.site config.",
                    "drush config-get system.site page.front": "gets system.site:page.front value."
                },
                "outputformat": {
                    "default": "yaml",
                    "pipe-format": "var_export"
                },
                "aliases": [
                    "cget"
                ],
                "core": [
                    "8+"
                ],
                "command": "config-get",
                "command-hook": "config-get",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "config",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "yaml",
                        "pipe-format": "var_export",
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "string",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=string": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "config",
                "bootstrap": 6
            },
            "config-import": {
                "description": "Import config from a config directory.",
                "arguments": {
                    "label": "A config directory label (i.e. a key in $config_directories array in settings.php). Defaults to 'staging'"
                },
                "options": {
                    "preview": {
                        "description": "Format for displaying proposed changes. Recognized values: list, diff. Defaults to list",
                        "example-value": "list"
                    },
                    "source": "An arbitrary directory that holds the configuration files. An alternative to label argument",
                    "partial": "Allows for partial config imports from the source directory. Only updates and new configs will be processed with this flag (missing configs will not be deleted)."
                },
                "core": [
                    "8+"
                ],
                "aliases": [
                    "cim"
                ],
                "command": "config-import",
                "command-hook": "config-import",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "config",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "config",
                "bootstrap": 6
            },
            "config-list": {
                "description": "List config names by prefix.",
                "core": [
                    "8+"
                ],
                "aliases": [
                    "cli"
                ],
                "arguments": {
                    "prefix": "The config prefix. For example, \"system\". No prefix will return all names in the system."
                },
                "examples": {
                    "drush config-list system": "Return a list of all system config names.",
                    "drush config-list \"image.style\"": "Return a list of all image styles.",
                    "drush config-list --format=\"json\"": "Return all config names as json."
                },
                "outputformat": {
                    "default": "list",
                    "pipe-format": "var_export",
                    "output-data-type": "format-list"
                },
                "command": "config-list",
                "command-hook": "config-list",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "config",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "list",
                        "pipe-format": "var_export",
                        "require-engine-capability": [
                            "format-list"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv-or-string",
                            "key-value",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "var_export",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, list, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=var_export": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "config",
                "bootstrap": 6
            },
            "config-merge": {
                "description": "Merge configuration data from two sites.",
                "aliases": [
                    "cm"
                ],
                "required-arguments": 1,
                "arguments": {
                    "site": "Alias for the site containing the other configuration data to merge.",
                    "label": "A config directory label (i.e. a key in $config_directories array in settings.php). Defaults to 'staging'"
                },
                "options": {
                    "base": "The commit hash or tag for the base of the three-way merge operation.  This should be the most recent commit that was deployed to the site specified in the first argument.",
                    "branch": {
                        "description": "A branch to use when doing the configuration merge. Optional. Default is to use a temporary branch.",
                        "example-value": "branch-name"
                    },
                    "message": "Commit comment for the merged configuration.",
                    "no-commit": "Do not commit the fetched configuration; leave the modified files unstaged.",
                    "tool": {
                        "description": "Specific tool to use with `git mergetool`.  Use --tool=0 to prevent use of mergetool.  Optional.  Defaults to whatever tool is configured in git.",
                        "example-value": "kdiff3"
                    },
                    "fetch-only": "Don't run `git mergetool`; fetch all configuration changes from both sites, and merge them onto the working branch.  May result in unresolved merge conflicts.",
                    "git": "Fetch changes from the other site using git instead of rsync.",
                    "remote": {
                        "description": "The remote git branch to use to fetch changes.  Defaults to \"origin\".",
                        "example-value": "origin"
                    },
                    "temp": {
                        "description": "Export destination site's configuration to a temporary directory.",
                        "example-value": "path"
                    }
                },
                "examples": {
                    "drush @dev config-merge @production": "Merge configuration changes from the production site with the configuration changes made on the development site.",
                    "drush @dev config-merge \/path\/to\/drupal#sitefolder": "Merge configuration changes from the site indicated by the provided site specification."
                },
                "topics": [
                    "docs-cm"
                ],
                "command": "config-merge",
                "command-hook": "config-merge",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "config",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "config",
                "bootstrap": 6
            },
            "config-set": {
                "description": "Set config value directly in active configuration.",
                "arguments": {
                    "config-name": "The config object name, for example \"system.site\".",
                    "key": "The config key, for example \"page.front\".",
                    "value": "The value to assign to the config key. Use '-' to read from STDIN."
                },
                "options": {
                    "format": {
                        "description": "Format to parse the object. Use \"string\" for string (default), and \"yaml\" for YAML.",
                        "example-value": "yaml",
                        "value": "required"
                    },
                    "value": {
                        "description": "The value to assign to the config key (if any).",
                        "hidden": true
                    }
                },
                "examples": {
                    "drush config-set system.site page.front node": "Sets system.site:page.front to \"node\"."
                },
                "aliases": [
                    "cset"
                ],
                "core": [
                    "8+"
                ],
                "command": "config-set",
                "command-hook": "config-set",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "config",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "config",
                "bootstrap": 6
            }
        }
    },
    "field": {
        "title": "Field commands",
        "summary": "Manipulate Drupal 7+ fields.",
        "commands": {
            "field-clone": {
                "description": "Clone a field and all its instances.",
                "core": [
                    "7+"
                ],
                "arguments": {
                    "source_field_name": "Name of field that will be cloned",
                    "target_field_name": "Name of new, cloned field."
                },
                "examples": {
                    "field-clone tags labels": "Copy 'tags' field into a new field 'labels' field which has same instances.",
                    "open `field-clone tags labels`": "Clone field and then open field edit forms for refinement."
                },
                "command": "field-clone",
                "command-hook": "field-clone",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "field",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "field",
                "bootstrap": 6
            },
            "field-create": {
                "description": "Create fields and instances. Returns urls for field editing.",
                "core": [
                    "7+"
                ],
                "arguments": {
                    "bundle": "Content type (for nodes). Name of bundle to attach fields to. Required.",
                    "field_spec": "Comma delimited triple in the form: field_name,field_type,widget_name. If widget_name is omitted, the default widget will be used. Separate multiple fields by space. If omitted, a wizard will prompt you."
                },
                "required-arguments": 1,
                "options": {
                    "entity_type": "Type of entity (e.g. node, user, comment). Defaults to node."
                },
                "examples": {
                    "drush field-create article": "Define new article fields via interactive prompts.",
                    "open `drush field-create article`": "Define new article fields and then open field edit form for refinement.",
                    "drush field-create article city,text,text_textfield subtitle,text,text_textfield": "Create two new fields."
                },
                "command": "field-create",
                "command-hook": "field-create",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "field",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "field",
                "bootstrap": 6
            },
            "field-delete": {
                "description": "Delete a field and its instances.",
                "core": [
                    "7+"
                ],
                "arguments": {
                    "field_name": "Name of field to delete."
                },
                "options": {
                    "bundle": "Only delete the instance attached to this bundle. If omitted, admin can choose to delete one instance or whole field.",
                    "entity_type": "Disambiguate a particular bundle from identically named bundles. Usually not needed."
                },
                "examples": {
                    "field-delete city": "Delete the city field and any instances it might have.",
                    "field-delete city --bundle=article": "Delete the city instance on the article bundle"
                },
                "command": "field-delete",
                "command-hook": "field-delete",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "field",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "field",
                "bootstrap": 6
            },
            "field-info": {
                "description": "View information about fields, field_types, and widgets.",
                "core": [
                    "7+"
                ],
                "arguments": {
                    "type": "Recognized values: fields, types. If omitted, a choice list appears."
                },
                "examples": {
                    "field-info types": "Show a table which lists all field types and their available widgets"
                },
                "outputformat": {
                    "default": "table",
                    "pipe-format": "csv",
                    "field-labels": {
                        "field-name": "Field name",
                        "type": "Field type",
                        "bundle": "Field bundle",
                        "type-name": "Type name",
                        "widget": "Default widget",
                        "widgets": "Widgets"
                    },
                    "table-metadata": {
                        "process-cell": "_drush_field_info_process_cell"
                    },
                    "output-data-type": "format-table"
                },
                "command": "field-info",
                "command-hook": "field-info",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "field",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "table",
                        "pipe-format": "csv",
                        "field-labels": {
                            "field-name": "Field name",
                            "type": "Field type",
                            "bundle": "Field bundle",
                            "type-name": "Type name",
                            "widget": "Default widget",
                            "widgets": "Widgets"
                        },
                        "table-metadata": {
                            "process-cell": "_drush_field_info_process_cell"
                        },
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "field",
                "bootstrap": 6
            },
            "field-update": {
                "description": "Return URL for field editing web page.",
                "core": [
                    "7+"
                ],
                "arguments": {
                    "field_name": "Name of field that needs updating."
                },
                "examples": {
                    "field-update comment_body": "Quickly navigate to a field edit web page."
                },
                "command": "field-update",
                "command-hook": "field-update",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "field",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "field",
                "bootstrap": 6
            }
        }
    },
    "pm": {
        "title": "Project manager commands",
        "summary": "Download, enable, examine and update your modules and themes.",
        "commands": {
            "pm-disable": {
                "description": "Disable one or more extensions (modules or themes).",
                "arguments": {
                    "extensions": "A list of modules or themes. You can use the * wildcard at the end of extension names to disable multiple matches."
                },
                "aliases": [
                    "dis"
                ],
                "engines": {
                    "release_info": {
                        "add-options-to-command": false,
                        "description": "",
                        "option": false,
                        "default": null,
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "combine-help": false
                    },
                    "version_control": {
                        "option": "version-control",
                        "default": "backup",
                        "description": "Integrate with version control systems.",
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "add-options-to-command": false,
                        "combine-help": false,
                        "usable": [
                            "backup",
                            "bzr",
                            "svn"
                        ]
                    },
                    "package_handler": {
                        "option": "package-handler",
                        "description": "Determine how to fetch projects from update service.",
                        "default": "wget",
                        "options": {
                            "cache": "Cache release XML and tarballs or git clones. Git clones use git's --reference option. Defaults to 1 for downloads, and 0 for git."
                        },
                        "sub-options": [],
                        "config-aliases": [],
                        "add-options-to-command": false,
                        "combine-help": false,
                        "usable": [
                            "wget",
                            "git_drupalorg"
                        ]
                    }
                },
                "command": "pm-disable",
                "command-hook": "pm-disable",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": {
                    "version-control=backup": {
                        "description": "Backup all project files before updates."
                    },
                    "version-control=bzr": {
                        "description": "Quickly add\/remove\/commit your project changes to Bazaar."
                    },
                    "version-control=svn": {
                        "description": "Quickly add\/remove\/commit your project changes to Subversion."
                    },
                    "cache": "Cache release XML and tarballs or git clones. Git clones use git's --reference option. Defaults to 1 for downloads, and 0 for git.",
                    "package-handler=wget": {
                        "description": "Download project packages using wget or curl."
                    },
                    "package-handler=git_drupalorg": {
                        "description": "Use git.drupal.org to checkout and update projects."
                    }
                },
                "sub-options": {
                    "version-control=backup": {
                        "no-backup": "Do not perform backups.",
                        "backup-dir": "Specify a directory to backup projects into. Defaults to drush-backups within the home directory of the user running the command. It is forbidden to specify a directory inside your drupal root."
                    },
                    "version-control=bzr": {
                        "bzrsync": "Automatically add new files to the Bazaar repository and remove deleted files. Caution.",
                        "bzrcommit": "Automatically commit changes to Bazaar repository. You must also use the --bzrsync option."
                    },
                    "bzrcommit": {
                        "bzrmessage": "Override default commit message which is: Drush automatic commit. Project \u003cname\u003e \u003ctype\u003e Command: \u003cthe drush command line used\u003e"
                    },
                    "version-control=svn": {
                        "svnsync": "Automatically add new files to the SVN repository and remove deleted files. Caution.",
                        "svncommit": "Automatically commit changes to SVN repository. You must also using the --svnsync option.",
                        "svnstatusparams": "Add options to the 'svn status' command",
                        "svnaddparams": "Add options to the `svn add` command",
                        "svnremoveparams": "Add options to the `svn remove` command",
                        "svnrevertparams": "Add options to the `svn revert` command",
                        "svncommitparams": "Add options to the `svn commit` command"
                    },
                    "svncommit": {
                        "svnmessage": "Override default commit message which is: Drush automatic commit: \u003cthe drush command line used\u003e"
                    },
                    "package-handler=wget": {
                        "no-md5": "Skip md5 validation of downloads."
                    },
                    "package-handler=git_drupalorg": {
                        "gitusername": "Your git username as shown on user\/[uid]\/edit\/git. Typically, this is set this in drushrc.php. Omitting this prevents users from pushing changes back to git.drupal.org.",
                        "gitsubmodule": "Use git submodules for checking out new projects. Existing git checkouts are unaffected, and will continue to (not) use submodules regardless of this setting.",
                        "gitcheckoutparams": "Add options to the `git checkout` command.",
                        "gitcloneparams": "Add options to the `git clone` command.",
                        "gitfetchparams": "Add options to the `git fetch` command.",
                        "gitpullparams": "Add options to the `git pull` command.",
                        "gitinfofile": "Inject version info into each .info file."
                    },
                    "gitsubmodule": {
                        "gitsubmoduleaddparams": "Add options to the `git submodule add` command."
                    }
                },
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "pm",
                "bootstrap": 6
            },
            "pm-download": {
                "description": "Download projects from drupal.org or other sources.",
                "examples": {
                    "drush dl drupal": "Download latest recommended release of Drupal core.",
                    "drush dl drupal-7.x": "Download latest 7.x development version of Drupal core.",
                    "drush dl drupal-6": "Download latest recommended release of Drupal 6.x.",
                    "drush dl cck zen": "Download latest versions of CCK and Zen projects.",
                    "drush dl og-1.3": "Download a specfic version of Organic groups module for my version of Drupal.",
                    "drush dl diff-6.x-2.x": "Download a specific development branch of diff module for a specific Drupal version.",
                    "drush dl views --select": "Show a list of recent releases of the views project, prompt for which one to download.",
                    "drush dl webform --dev": "Download the latest dev release of webform.",
                    "drush dl webform --cache": "Download webform. Fetch and populate the download cache as needed."
                },
                "arguments": {
                    "projects": "A comma delimited list of drupal.org project names, with optional version. Defaults to 'drupal'"
                },
                "options": {
                    "destination": {
                        "description": "Path to which the project will be copied. If you're providing a relative path, note it is relative to the drupal root (if bootstrapped).",
                        "example-value": "path"
                    },
                    "use-site-dir": "Force to use the site specific directory. It will create the directory if it doesn't exist. If --destination is also present this option will be ignored.",
                    "notes": "Show release notes after each project is downloaded.",
                    "variant": {
                        "description": "Only useful for install profiles. Possible values: 'full', 'projects', 'profile-only'.",
                        "example-value": "full"
                    },
                    "select": "Select the version to download interactively from a list of available releases.",
                    "drupal-project-rename": "Alternate name for \"drupal-x.y\" directory when downloading Drupal project. Defaults to \"drupal\".",
                    "default-major": {
                        "description": "Specify the default major version of modules to download when there is no bootstrapped Drupal site.  Defaults to \"7\".",
                        "example-value": "6"
                    },
                    "skip": "Skip automatic downloading of libraries (c.f. devel).",
                    "pipe": "Returns a list of the names of the extensions (modules and themes) contained in the downloaded projects.",
                    "version-control=backup": {
                        "description": "Backup all project files before updates."
                    },
                    "version-control=bzr": {
                        "description": "Quickly add\/remove\/commit your project changes to Bazaar."
                    },
                    "version-control=svn": {
                        "description": "Quickly add\/remove\/commit your project changes to Subversion."
                    },
                    "cache": "Cache release XML and tarballs or git clones. Git clones use git's --reference option. Defaults to 1 for downloads, and 0 for git.",
                    "package-handler=wget": {
                        "description": "Download project packages using wget or curl."
                    },
                    "package-handler=git_drupalorg": {
                        "description": "Use git.drupal.org to checkout and update projects."
                    },
                    "source": "The base URL which provides project release history in XML. Defaults to http:\/\/updates.drupal.org\/release-history.",
                    "dev": "Work with development releases solely."
                },
                "bootstrap": -2,
                "aliases": [
                    "dl"
                ],
                "engines": {
                    "version_control": {
                        "option": "version-control",
                        "default": "backup",
                        "description": "Integrate with version control systems.",
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "add-options-to-command": false,
                        "combine-help": false,
                        "usable": [
                            "backup",
                            "bzr",
                            "svn"
                        ]
                    },
                    "package_handler": {
                        "option": "package-handler",
                        "description": "Determine how to fetch projects from update service.",
                        "default": "wget",
                        "options": {
                            "cache": "Cache release XML and tarballs or git clones. Git clones use git's --reference option. Defaults to 1 for downloads, and 0 for git."
                        },
                        "sub-options": [],
                        "config-aliases": [],
                        "add-options-to-command": false,
                        "combine-help": false,
                        "usable": [
                            "wget",
                            "git_drupalorg"
                        ]
                    },
                    "release_info": {
                        "add-options-to-command": true,
                        "description": "",
                        "option": false,
                        "default": null,
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "combine-help": false
                    }
                },
                "command": "pm-download",
                "command-hook": "pm-download",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": {
                    "version-control=backup": {
                        "no-backup": "Do not perform backups.",
                        "backup-dir": "Specify a directory to backup projects into. Defaults to drush-backups within the home directory of the user running the command. It is forbidden to specify a directory inside your drupal root."
                    },
                    "version-control=bzr": {
                        "bzrsync": "Automatically add new files to the Bazaar repository and remove deleted files. Caution.",
                        "bzrcommit": "Automatically commit changes to Bazaar repository. You must also use the --bzrsync option."
                    },
                    "bzrcommit": {
                        "bzrmessage": "Override default commit message which is: Drush automatic commit. Project \u003cname\u003e \u003ctype\u003e Command: \u003cthe drush command line used\u003e"
                    },
                    "version-control=svn": {
                        "svnsync": "Automatically add new files to the SVN repository and remove deleted files. Caution.",
                        "svncommit": "Automatically commit changes to SVN repository. You must also using the --svnsync option.",
                        "svnstatusparams": "Add options to the 'svn status' command",
                        "svnaddparams": "Add options to the `svn add` command",
                        "svnremoveparams": "Add options to the `svn remove` command",
                        "svnrevertparams": "Add options to the `svn revert` command",
                        "svncommitparams": "Add options to the `svn commit` command"
                    },
                    "svncommit": {
                        "svnmessage": "Override default commit message which is: Drush automatic commit: \u003cthe drush command line used\u003e"
                    },
                    "package-handler=wget": {
                        "no-md5": "Skip md5 validation of downloads."
                    },
                    "package-handler=git_drupalorg": {
                        "gitusername": "Your git username as shown on user\/[uid]\/edit\/git. Typically, this is set this in drushrc.php. Omitting this prevents users from pushing changes back to git.drupal.org.",
                        "gitsubmodule": "Use git submodules for checking out new projects. Existing git checkouts are unaffected, and will continue to (not) use submodules regardless of this setting.",
                        "gitcheckoutparams": "Add options to the `git checkout` command.",
                        "gitcloneparams": "Add options to the `git clone` command.",
                        "gitfetchparams": "Add options to the `git fetch` command.",
                        "gitpullparams": "Add options to the `git pull` command.",
                        "gitinfofile": "Inject version info into each .info file."
                    },
                    "gitsubmodule": {
                        "gitsubmoduleaddparams": "Add options to the `git submodule add` command."
                    },
                    "cache": {
                        "cache-duration-releasexml": "Expire duration (in seconds) for release XML. Defaults to 86400 (24 hours)."
                    },
                    "select": {
                        "all": "Shows all available releases instead of a short list of recent releases."
                    }
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "pm"
            },
            "pm-enable": {
                "description": "Enable one or more extensions (modules or themes).",
                "arguments": {
                    "extensions": "A list of modules or themes. You can use the * wildcard at the end of extension names to enable all matches."
                },
                "options": {
                    "resolve-dependencies": "Attempt to download any missing dependencies. At the moment, only works when the module name is the same as the project name.",
                    "skip": "Skip automatic downloading of libraries (c.f. devel)."
                },
                "aliases": [
                    "en"
                ],
                "engines": {
                    "release_info": {
                        "add-options-to-command": false,
                        "description": "",
                        "option": false,
                        "default": null,
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "combine-help": false
                    }
                },
                "command": "pm-enable",
                "command-hook": "pm-enable",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "pm",
                "bootstrap": 6
            },
            "pm-info": {
                "description": "Show detailed info for one or more extensions (modules or themes).",
                "arguments": {
                    "extensions": "A list of modules or themes. You can use the * wildcard at the end of extension names to show info for multiple matches. If no argument is provided it will show info for all available extensions."
                },
                "aliases": [
                    "pmi"
                ],
                "outputformat": {
                    "default": "key-value-list",
                    "pipe-format": "json",
                    "formatted-filter": "_drush_pm_info_format_table_data",
                    "field-labels": {
                        "extension": "Extension",
                        "project": "Project",
                        "type": "Type",
                        "title": "Title",
                        "description": "Description",
                        "version": "Version",
                        "date": "Date",
                        "package": "Package",
                        "core": "Core",
                        "php": "PHP",
                        "status": "Status",
                        "path": "Path",
                        "schema_version": "Schema version",
                        "files": "Files",
                        "requires": "Requires",
                        "required_by": "Required by",
                        "permissions": "Permissions",
                        "config": "Configure",
                        "engine": "Engine",
                        "base_theme": "Base theme",
                        "regions": "Regions",
                        "features": "Features",
                        "stylesheets": "Stylesheets",
                        "scripts": "Scripts"
                    },
                    "output-data-type": "format-table"
                },
                "command": "pm-info",
                "command-hook": "pm-info",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "engines": {
                    "outputformat": {
                        "default": "key-value-list",
                        "pipe-format": "json",
                        "formatted-filter": "_drush_pm_info_format_table_data",
                        "field-labels": {
                            "extension": "Extension",
                            "project": "Project",
                            "type": "Type",
                            "title": "Title",
                            "description": "Description",
                            "version": "Version",
                            "date": "Date",
                            "package": "Package",
                            "core": "Core",
                            "php": "PHP",
                            "status": "Status",
                            "path": "Path",
                            "schema_version": "Schema version",
                            "files": "Files",
                            "requires": "Requires",
                            "required_by": "Required by",
                            "permissions": "Permissions",
                            "config": "Configure",
                            "engine": "Engine",
                            "base_theme": "Base theme",
                            "regions": "Regions",
                            "features": "Features",
                            "stylesheets": "Stylesheets",
                            "scripts": "Scripts"
                        },
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "pm",
                "bootstrap": 6
            },
            "pm-list": {
                "description": "Show a list of available extensions (modules and themes).",
                "callback arguments": [
                    [],
                    false
                ],
                "options": {
                    "type": {
                        "description": "Filter by extension type. Choices: module, theme.",
                        "example-value": "module"
                    },
                    "status": {
                        "description": "Filter by extension status. Choices: enabled, disabled and\/or 'not installed'. You can use multiple comma separated values. (i.e. --status=\"disabled,not installed\").",
                        "example-value": "disabled"
                    },
                    "package": "Filter by project packages. You can use multiple comma separated values. (i.e. --package=\"Core - required,Other\").",
                    "core": "Filter out extensions that are not in drupal core.",
                    "no-core": "Filter out extensions that are provided by drupal core.",
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "outputformat": {
                    "default": "table",
                    "pipe-format": "list",
                    "field-labels": {
                        "package": "Package",
                        "name": "Name",
                        "type": "Type",
                        "status": "Status",
                        "version": "Version"
                    },
                    "output-data-type": "format-table"
                },
                "aliases": [
                    "pml"
                ],
                "command": "pm-list",
                "command-hook": "pm-list",
                "invoke hooks": true,
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "engines": {
                    "outputformat": {
                        "default": "table",
                        "pipe-format": "list",
                        "field-labels": {
                            "package": "Package",
                            "name": "Name",
                            "type": "Type",
                            "status": "Status",
                            "version": "Version"
                        },
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "pm",
                "bootstrap": 6
            },
            "pm-refresh": {
                "description": "Refresh update status information.",
                "engines": {
                    "update_status": {
                        "add-options-to-command": false,
                        "option": "update-backend",
                        "description": "Determine how to fetch update status information.",
                        "default": "drush",
                        "options": {
                            "update-backend": "Backend to obtain available updates.",
                            "check-disabled": "Check for updates of disabled modules and themes.",
                            "security-only": "Only update modules that have security updates available."
                        },
                        "combine-help": true,
                        "sub-options": [],
                        "config-aliases": [],
                        "usable": [
                            "drush",
                            "drupal"
                        ]
                    }
                },
                "aliases": [
                    "rf"
                ],
                "command": "pm-refresh",
                "command-hook": "pm-refresh",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": {
                    "update-backend": {
                        "description": "Backend to obtain available updates. Available: drush, drupal. Default is drush."
                    },
                    "check-disabled": "Check for updates of disabled modules and themes.",
                    "security-only": "Only update modules that have security updates available.",
                    "update-backend=drush": {
                        "description": "Check available updates without update.module.",
                        "hidden": true
                    },
                    "update-backend=drupal": {
                        "description": "Check available updates with update.module.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "update-backend=drush": [],
                    "update-backend=drupal": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "pm",
                "bootstrap": 6
            },
            "pm-releasenotes": {
                "description": "Print release notes for given projects.",
                "arguments": {
                    "projects": "A list of project names, with optional version. Defaults to 'drupal'"
                },
                "options": {
                    "html": "Display release notes in HTML rather than plain text.",
                    "source": "The base URL which provides project release history in XML. Defaults to http:\/\/updates.drupal.org\/release-history.",
                    "dev": "Work with development releases solely."
                },
                "examples": {
                    "drush rln cck": "Prints the release notes for the recommended version of CCK project.",
                    "drush rln token-1.13": "View release notes of a specfic version of the Token project for my version of Drupal.",
                    "drush rln pathauto zen": "View release notes for the recommended version of Pathauto and Zen projects."
                },
                "aliases": [
                    "rln"
                ],
                "bootstrap": -2,
                "engines": {
                    "release_info": {
                        "add-options-to-command": true,
                        "description": "",
                        "option": false,
                        "default": null,
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "combine-help": false
                    }
                },
                "command": "pm-releasenotes",
                "command-hook": "pm-releasenotes",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": {
                    "cache": {
                        "cache-duration-releasexml": "Expire duration (in seconds) for release XML. Defaults to 86400 (24 hours)."
                    },
                    "select": {
                        "all": "Shows all available releases instead of a short list of recent releases."
                    }
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "pm"
            },
            "pm-releases": {
                "description": "Print release information for given projects.",
                "arguments": {
                    "projects": "A list of drupal.org project names. Defaults to 'drupal'"
                },
                "examples": {
                    "drush pm-releases cck zen": "View releases for cck and Zen projects for your Drupal version."
                },
                "options": {
                    "default-major": "Show releases compatible with the specified major version of Drupal.",
                    "source": "The base URL which provides project release history in XML. Defaults to http:\/\/updates.drupal.org\/release-history.",
                    "dev": "Work with development releases solely.",
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "aliases": [
                    "rl"
                ],
                "bootstrap": -2,
                "outputformat": {
                    "default": "table",
                    "pipe-format": "csv",
                    "field-labels": {
                        "project": "Project",
                        "version": "Release",
                        "date": "Date",
                        "status": "Status"
                    },
                    "fields-default": [
                        "project",
                        "version",
                        "date",
                        "status"
                    ],
                    "fields-pipe": [
                        "project",
                        "version",
                        "date",
                        "status"
                    ],
                    "output-data-type": "format-table"
                },
                "engines": {
                    "outputformat": {
                        "default": "table",
                        "pipe-format": "csv",
                        "field-labels": {
                            "project": "Project",
                            "version": "Release",
                            "date": "Date",
                            "status": "Status"
                        },
                        "fields-default": [
                            "project",
                            "version",
                            "date",
                            "status"
                        ],
                        "fields-pipe": [
                            "project",
                            "version",
                            "date",
                            "status"
                        ],
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    },
                    "release_info": {
                        "add-options-to-command": true,
                        "description": "",
                        "option": false,
                        "default": null,
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "combine-help": false
                    }
                },
                "command": "pm-releases",
                "command-hook": "pm-releases",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": {
                    "cache": {
                        "cache-duration-releasexml": "Expire duration (in seconds) for release XML. Defaults to 86400 (24 hours)."
                    },
                    "select": {
                        "all": "Shows all available releases instead of a short list of recent releases."
                    },
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "pm"
            },
            "pm-uninstall": {
                "description": "Uninstall one or more modules.",
                "arguments": {
                    "modules": "A list of modules."
                },
                "aliases": [
                    "pmu"
                ],
                "command": "pm-uninstall",
                "command-hook": "pm-uninstall",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "pm",
                "bootstrap": 6
            },
            "pm-update": {
                "description": "Update Drupal core and contrib projects and apply any pending database updates (Same as pm-updatecode + updatedb).",
                "aliases": [
                    "up"
                ],
                "allow-additional-options": [
                    "pm-updatecode",
                    "updatedb"
                ],
                "command": "pm-update",
                "command-hook": "pm-update",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "pm",
                "bootstrap": 6
            },
            "pm-updatecode": {
                "description": "Update Drupal core and contrib projects to latest recommended releases.",
                "examples": {
                    "drush pm-updatecode --no-core": "Update contrib projects, but skip core.",
                    "drush pm-updatestatus --format=csv --list-separator=\" \" --fields=\"name,existing_version,candidate_version,status_msg\"": "To show a list of projects with their update status, use pm-updatestatus instead of pm-updatecode."
                },
                "arguments": {
                    "projects": "Optional. A list of installed projects to update."
                },
                "options": {
                    "notes": "Show release notes for each project to be updated.",
                    "no-core": "Only update modules and skip the core update.",
                    "check-updatedb": "Check to see if an updatedb is needed after updating the code. Default is on; use --check-updatedb=0 to disable.",
                    "lock": {
                        "description": "Add a persistent lock to remove the specified projects from consideration during updates.  Locks may be removed with the --unlock parameter, or overridden by specifically naming the project as a parameter to pm-update or pm-updatecode.  The lock does not affect pm-download.  See also the update_advanced project for similar and improved functionality.",
                        "example-value": "foo,bar"
                    },
                    "version-control=backup": {
                        "description": "Backup all project files before updates."
                    },
                    "version-control=bzr": {
                        "description": "Quickly add\/remove\/commit your project changes to Bazaar."
                    },
                    "version-control=svn": {
                        "description": "Quickly add\/remove\/commit your project changes to Subversion."
                    },
                    "cache": "Cache release XML and tarballs or git clones. Git clones use git's --reference option. Defaults to 1 for downloads, and 0 for git.",
                    "package-handler=wget": {
                        "description": "Download project packages using wget or curl."
                    },
                    "package-handler=git_drupalorg": {
                        "description": "Use git.drupal.org to checkout and update projects."
                    },
                    "update-backend": {
                        "description": "Backend to obtain available updates. Available: drush, drupal. Default is drush."
                    },
                    "check-disabled": "Check for updates of disabled modules and themes.",
                    "security-only": "Only update modules that have security updates available.",
                    "update-backend=drush": {
                        "description": "Check available updates without update.module.",
                        "hidden": true
                    },
                    "update-backend=drupal": {
                        "description": "Check available updates with update.module.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "lock": {
                        "lock-message": {
                            "description": "A brief message explaining why a project is being locked; displayed during pm-updatecode.  Optional.",
                            "example-value": "message"
                        },
                        "unlock": {
                            "description": "Remove the persistent lock from the specified projects so that they may be updated again.",
                            "example-value": "foo,bar"
                        }
                    },
                    "version-control=backup": {
                        "no-backup": "Do not perform backups.",
                        "backup-dir": "Specify a directory to backup projects into. Defaults to drush-backups within the home directory of the user running the command. It is forbidden to specify a directory inside your drupal root."
                    },
                    "version-control=bzr": {
                        "bzrsync": "Automatically add new files to the Bazaar repository and remove deleted files. Caution.",
                        "bzrcommit": "Automatically commit changes to Bazaar repository. You must also use the --bzrsync option."
                    },
                    "bzrcommit": {
                        "bzrmessage": "Override default commit message which is: Drush automatic commit. Project \u003cname\u003e \u003ctype\u003e Command: \u003cthe drush command line used\u003e"
                    },
                    "version-control=svn": {
                        "svnsync": "Automatically add new files to the SVN repository and remove deleted files. Caution.",
                        "svncommit": "Automatically commit changes to SVN repository. You must also using the --svnsync option.",
                        "svnstatusparams": "Add options to the 'svn status' command",
                        "svnaddparams": "Add options to the `svn add` command",
                        "svnremoveparams": "Add options to the `svn remove` command",
                        "svnrevertparams": "Add options to the `svn revert` command",
                        "svncommitparams": "Add options to the `svn commit` command"
                    },
                    "svncommit": {
                        "svnmessage": "Override default commit message which is: Drush automatic commit: \u003cthe drush command line used\u003e"
                    },
                    "package-handler=wget": {
                        "no-md5": "Skip md5 validation of downloads."
                    },
                    "package-handler=git_drupalorg": {
                        "gitusername": "Your git username as shown on user\/[uid]\/edit\/git. Typically, this is set this in drushrc.php. Omitting this prevents users from pushing changes back to git.drupal.org.",
                        "gitsubmodule": "Use git submodules for checking out new projects. Existing git checkouts are unaffected, and will continue to (not) use submodules regardless of this setting.",
                        "gitcheckoutparams": "Add options to the `git checkout` command.",
                        "gitcloneparams": "Add options to the `git clone` command.",
                        "gitfetchparams": "Add options to the `git fetch` command.",
                        "gitpullparams": "Add options to the `git pull` command.",
                        "gitinfofile": "Inject version info into each .info file."
                    },
                    "gitsubmodule": {
                        "gitsubmoduleaddparams": "Add options to the `git submodule add` command."
                    },
                    "update-backend=drush": [],
                    "update-backend=drupal": []
                },
                "aliases": [
                    "upc"
                ],
                "topics": [
                    "docs-policy"
                ],
                "engines": {
                    "release_info": {
                        "add-options-to-command": false,
                        "description": "",
                        "option": false,
                        "default": null,
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "combine-help": false
                    },
                    "version_control": {
                        "option": "version-control",
                        "default": "backup",
                        "description": "Integrate with version control systems.",
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "add-options-to-command": false,
                        "combine-help": false,
                        "usable": [
                            "backup",
                            "bzr",
                            "svn"
                        ]
                    },
                    "package_handler": {
                        "option": "package-handler",
                        "description": "Determine how to fetch projects from update service.",
                        "default": "wget",
                        "options": {
                            "cache": "Cache release XML and tarballs or git clones. Git clones use git's --reference option. Defaults to 1 for downloads, and 0 for git."
                        },
                        "sub-options": [],
                        "config-aliases": [],
                        "add-options-to-command": false,
                        "combine-help": false,
                        "usable": [
                            "wget",
                            "git_drupalorg"
                        ]
                    },
                    "update_status": {
                        "option": "update-backend",
                        "description": "Determine how to fetch update status information.",
                        "default": "drush",
                        "add-options-to-command": true,
                        "options": {
                            "update-backend": "Backend to obtain available updates.",
                            "check-disabled": "Check for updates of disabled modules and themes.",
                            "security-only": "Only update modules that have security updates available."
                        },
                        "combine-help": true,
                        "sub-options": [],
                        "config-aliases": [],
                        "usable": [
                            "drush",
                            "drupal"
                        ]
                    }
                },
                "command": "pm-updatecode",
                "command-hook": "pm-updatecode",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "pm",
                "bootstrap": 6
            },
            "pm-updatestatus": {
                "description": "Show a report of available minor updates to Drupal core and contrib projects.",
                "arguments": {
                    "projects": "Optional. A list of installed projects to show."
                },
                "options": {
                    "pipe": "Return a list of the projects with any extensions enabled that need updating, one project per line.",
                    "lock": {
                        "description": "Add a persistent lock to remove the specified projects from consideration during updates.  Locks may be removed with the --unlock parameter, or overridden by specifically naming the project as a parameter to pm-update or pm-updatecode.  The lock does not affect pm-download.  See also the update_advanced project for similar and improved functionality.",
                        "example-value": "foo,bar"
                    },
                    "update-backend": {
                        "description": "Backend to obtain available updates. Available: drush, drupal. Default is drush."
                    },
                    "check-disabled": "Check for updates of disabled modules and themes.",
                    "security-only": "Only update modules that have security updates available.",
                    "update-backend=drush": {
                        "description": "Check available updates without update.module.",
                        "hidden": true
                    },
                    "update-backend=drupal": {
                        "description": "Check available updates with update.module.",
                        "hidden": true
                    },
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "lock": {
                        "lock-message": {
                            "description": "A brief message explaining why a project is being locked; displayed during pm-updatecode.  Optional.",
                            "example-value": "message"
                        },
                        "unlock": {
                            "description": "Remove the persistent lock from the specified projects so that they may be updated again.",
                            "example-value": "foo,bar"
                        }
                    },
                    "update-backend=drush": [],
                    "update-backend=drupal": [],
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "engines": {
                    "outputformat": {
                        "default": "table",
                        "pipe-format": "list",
                        "field-labels": {
                            "name": "Short Name",
                            "label": "Name",
                            "existing_version": "Installed Version",
                            "status": "Status",
                            "status_msg": "Message",
                            "candidate_version": "Proposed version"
                        },
                        "fields-default": [
                            "label",
                            "existing_version",
                            "candidate_version",
                            "status_msg"
                        ],
                        "fields-pipe": [
                            "name",
                            "existing_version",
                            "candidate_version",
                            "status_msg"
                        ],
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    },
                    "update_status": {
                        "option": "update-backend",
                        "description": "Determine how to fetch update status information.",
                        "default": "drush",
                        "add-options-to-command": true,
                        "options": {
                            "update-backend": "Backend to obtain available updates.",
                            "check-disabled": "Check for updates of disabled modules and themes.",
                            "security-only": "Only update modules that have security updates available."
                        },
                        "combine-help": true,
                        "sub-options": [],
                        "config-aliases": [],
                        "usable": [
                            "drush",
                            "drupal"
                        ]
                    }
                },
                "outputformat": {
                    "default": "table",
                    "pipe-format": "list",
                    "field-labels": {
                        "name": "Short Name",
                        "label": "Name",
                        "existing_version": "Installed Version",
                        "status": "Status",
                        "status_msg": "Message",
                        "candidate_version": "Proposed version"
                    },
                    "fields-default": [
                        "label",
                        "existing_version",
                        "candidate_version",
                        "status_msg"
                    ],
                    "fields-pipe": [
                        "name",
                        "existing_version",
                        "candidate_version",
                        "status_msg"
                    ],
                    "output-data-type": "format-table"
                },
                "aliases": [
                    "ups"
                ],
                "command": "pm-updatestatus",
                "command-hook": "pm-updatestatus",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "pm",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/pm",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "pm",
                "bootstrap": 6
            }
        }
    },
    "role": {
        "title": "Role commands",
        "summary": "Interact with the role system.",
        "commands": {
            "role-add-perm": {
                "description": "Grant specified permission(s) to a role.",
                "examples": {
                    "drush role-add-perm 'anonymous user' 'post comments'": "Allow anon users to post comments.",
                    "drush role-add-perm 'anonymous user' \"'post comments','access content'\"": "Allow anon users to post comments and access content.",
                    "drush role-add-perm 'authenticated user' --module=node": "Select a permission from \"node\" permissions to add to logged in users."
                },
                "arguments": {
                    "role": "The role to modify.  Required.",
                    "permissions": "The list of permission to grant, delimited by commas. Required, unless the --module option is used."
                },
                "required-arguments": 1,
                "options": {
                    "module": "Select the permission to modify from an interactive list of all permissions available in the specified module."
                },
                "global-options": [
                    "cache-clear"
                ],
                "aliases": [
                    "rap"
                ],
                "command": "role-add-perm",
                "command-hook": "role-add-perm",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "role",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "role",
                "bootstrap": 6
            },
            "role-create": {
                "description": "Create a new role.",
                "examples": {
                    "drush role-create 'test role'": "Create a new role 'test role' on D6 or D7; auto-assign the rid. On D8, 'test role' is the rid, and the human-readable name is set to 'Test role'.",
                    "drush role-create 'test role' 'Test role'": "Create a new role with a machine name of 'test role', and a human-readable name of 'Test role'. On D6 and D7, behaves as the previous example."
                },
                "arguments": {
                    "machine name": "The symbolic machine name for the role. Required.",
                    "human-readable name": "A descriptive name for the role. Optional; Drupal 8 only.  Ignored in D6 and D7."
                },
                "aliases": [
                    "rcrt"
                ],
                "command": "role-create",
                "command-hook": "role-create",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "role",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "role",
                "bootstrap": 6
            },
            "role-delete": {
                "description": "Delete a role.",
                "examples": {
                    "drush role-delete 'test role'": "Delete the role 'test role'."
                },
                "arguments": {
                    "machine name": "The symbolic machine name for the role. Required.  In D6 and D7, this may also be a numeric role ID."
                },
                "aliases": [
                    "rdel"
                ],
                "command": "role-delete",
                "command-hook": "role-delete",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "role",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "role",
                "bootstrap": 6
            },
            "role-list": {
                "description": "Display a list of all roles defined on the system.  If a role name is provided as an argument, then all of the permissions of that role will be listed.  If a permission name is provided as an option, then all of the roles that have been granted that permission will be listed.",
                "examples": {
                    "drush role-list --filter='administer nodes'": "Display a list of roles that have the administer nodes permission assigned.",
                    "drush role-list 'anonymous user'": "Display all of the permissions assigned to the anon user role."
                },
                "arguments": {
                    "role": "The role to list.  Optional; if specified, lists all permissions assigned to that role.  If no role is specified, lists all of the roles available on the system."
                },
                "options": {
                    "filter": "Limits the list of roles to only those that have been assigned the specified permission. Optional; may not be specified if a role argument is provided.",
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "outputformat": {
                    "default": "table",
                    "pipe-format": "list",
                    "field-labels": {
                        "rid": "ID",
                        "label": "Role Label",
                        "perm": "Permission"
                    },
                    "output-data-type": "format-table"
                },
                "aliases": [
                    "rls"
                ],
                "command": "role-list",
                "command-hook": "role-list",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "role",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "table",
                        "pipe-format": "list",
                        "field-labels": {
                            "rid": "ID",
                            "label": "Role Label",
                            "perm": "Permission"
                        },
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "role",
                "bootstrap": 6
            },
            "role-remove-perm": {
                "description": "Remove specified permission(s) from a role.",
                "examples": {
                    "drush role-remove-perm 'anonymous user' 'access content'": "Hide content from anon users."
                },
                "arguments": {
                    "role": "The role to modify.",
                    "permissions": "The list of permission to grant, delimited by commas. Required, unless the --module option is used."
                },
                "required-arguments": 1,
                "options": {
                    "module": "Select the permission to modify from an interactive list of all permissions available in the specified module."
                },
                "global-options": [
                    "cache-clear"
                ],
                "aliases": [
                    "rmp"
                ],
                "command": "role-remove-perm",
                "command-hook": "role-remove-perm",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "role",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "role",
                "bootstrap": 6
            }
        }
    },
    "runserver": {
        "title": "Runserver commands",
        "summary": "Launch the built-in PHP webserver.",
        "commands": {
            "runserver": {
                "description": "Runs PHP's built-in http server for development.",
                "bootstrap": 5,
                "arguments": {
                    "addr:port\/path": "Host IP address and port number to bind to and path to open in web browser. Format is addr:port\/path, default 127.0.0.1:8888, all elements optional. See examples for shorthand."
                },
                "options": {
                    "variables": "Key-value array of variables to override in the $conf array for the running site. By default disables drupal_http_request_fails to avoid errors on Windows (which supports only one connection at a time). Comma delimited list of name=value pairs (or array in drushrc).",
                    "default-server": "A default addr:port\/path to use for any values not specified as an argument.",
                    "user": "If opening a web browser, automatically log in as this user (user ID or username). Default is to log in as uid 1.",
                    "browser": "If opening a web browser, which browser to user (defaults to operating system default).",
                    "dns": "Resolve hostnames\/IPs using DNS\/rDNS (if possible) to determine binding IPs and\/or human friendly hostnames for URLs and browser."
                },
                "aliases": [
                    "rs"
                ],
                "examples": {
                    "drush rs 8080": "Start runserver on 127.0.0.1, port 8080.",
                    "drush rs 10.0.0.28:80": "Start runserver on 10.0.0.28, port 80.",
                    "drush rs [::1]:80": "Start runserver on IPv6 localhost ::1, port 80.",
                    "drush rs --dns localhost:8888\/user": "Start runserver on localhost (using rDNS to determine binding IP), port 8888, and open \/user in browser.",
                    "drush rs \/": "Start runserver on default IP\/port (127.0.0.1, port 8888), and open \/ in browser.",
                    "drush rs --default-server=127.0.0.1:8080\/ -": "Use a default (would be specified in your drushrc) that starts runserver on port 8080, and opens a browser to the front page. Set path to a single hyphen path in argument to prevent opening browser for this session.",
                    "drush rs :9000\/admin": "Start runserver on 127.0.0.1, port 9000, and open \/admin in browser. Note that you need a colon when you specify port and path, but no IP."
                },
                "command": "runserver",
                "command-hook": "runserver",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "runserver",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/runserver",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "runserver"
            }
        }
    },
    "sql": {
        "title": "SQL commands",
        "summary": "Examine and modify your Drupal database.",
        "commands": {
            "sql-cli": {
                "description": "Open a SQL command-line interface using Drupal's credentials.",
                "bootstrap": -1,
                "allow-additional-options": [
                    "sql-connect"
                ],
                "aliases": [
                    "sqlc"
                ],
                "examples": {
                    "drush sql-cli": "Open a SQL command-line interface using Drupal's credentials.",
                    "drush sql-cli --extra=-A": "Open a SQL CLI and skip reading table information."
                },
                "remote-tty": true,
                "command": "sql-cli",
                "command-hook": "sql-cli",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "sql",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/sql",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "sql"
            },
            "sql-connect": {
                "description": "A string for connecting to the DB.",
                "bootstrap": -1,
                "options": {
                    "database": {
                        "description": "The DB connection key if using multiple connections in settings.php.",
                        "example-value": "key"
                    },
                    "target": {
                        "description": "The name of a target within the specified database connection. Defaults to 'default'.",
                        "example-value": "key",
                        "hidden": true
                    },
                    "db-url": {
                        "description": "A Drupal 6 style database URL.",
                        "example-value": "mysql:\/\/root:pass@127.0.0.1\/db"
                    },
                    "extra": {
                        "description": "Add custom options to the mysql command.",
                        "example-value": "--skip-column-names"
                    }
                },
                "examples": {
                    "`drush sql-connect` \u003c example.sql": "Import sql statements from a file into the current database."
                },
                "command": "sql-connect",
                "command-hook": "sql-connect",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "sql",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/sql",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "sql"
            },
            "sql-create": {
                "description": "Create a database.",
                "bootstrap": -1,
                "examples": {
                    "drush sql-create": "Create the database for the current site.",
                    "drush @site.test sql-create": "Create the database as specified for @site.test.",
                    "drush sql-create --db-su=root --db-su-pw=rootpassword --db-url=\"mysql:\/\/drupal_db_user:drupal_db_password@127.0.0.1\/drupal_db\"": "Create the database as specified in the db-url option."
                },
                "options": {
                    "db-su": "Account to use when creating a new database. Optional.",
                    "db-su-pw": "Password for the \"db-su\" account. Optional.",
                    "database": {
                        "description": "The DB connection key if using multiple connections in settings.php.",
                        "example-value": "key"
                    },
                    "target": {
                        "description": "The name of a target within the specified database connection. Defaults to 'default'.",
                        "example-value": "key",
                        "hidden": true
                    },
                    "db-url": {
                        "description": "A Drupal 6 style database URL.",
                        "example-value": "mysql:\/\/root:pass@127.0.0.1\/db"
                    }
                },
                "command": "sql-create",
                "command-hook": "sql-create",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "sql",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/sql",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "sql"
            },
            "sql-drop": {
                "description": "Drop all tables in a given database.",
                "arguments": [],
                "bootstrap": -1,
                "options": {
                    "yes": "Skip confirmation and proceed.",
                    "result-file": {
                        "description": "Save to a file. The file should be relative to Drupal root. Recommended.",
                        "example-value": "\/path\/to\/file"
                    },
                    "database": {
                        "description": "The DB connection key if using multiple connections in settings.php.",
                        "example-value": "key"
                    },
                    "target": {
                        "description": "The name of a target within the specified database connection. Defaults to 'default'.",
                        "example-value": "key",
                        "hidden": true
                    },
                    "db-url": {
                        "description": "A Drupal 6 style database URL.",
                        "example-value": "mysql:\/\/root:pass@127.0.0.1\/db"
                    }
                },
                "topics": [
                    "docs-policy"
                ],
                "command": "sql-drop",
                "command-hook": "sql-drop",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "sql",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/sql",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "sql"
            },
            "sql-dump": {
                "description": "Exports the Drupal DB as SQL using mysqldump or equivalent.",
                "bootstrap": -1,
                "examples": {
                    "drush sql-dump --result-file=..\/18.sql": "Save SQL dump to the directory above Drupal root.",
                    "drush sql-dump --skip-tables-key=common": "Skip standard tables. @see example.drushrc.php"
                },
                "options": {
                    "result-file": {
                        "description": "Save to a file. The file should be relative to Drupal root. If --result-file is provided with no value, then date based filename will be created under ~\/drush-backups directory.",
                        "example-value": "\/path\/to\/file",
                        "value": "optional"
                    },
                    "skip-tables-key": "A key in the $skip_tables array. @see example.drushrc.php. Optional.",
                    "structure-tables-key": "A key in the $structure_tables array. @see example.drushrc.php. Optional.",
                    "tables-key": "A key in the $tables array. Optional.",
                    "skip-tables-list": "A comma-separated list of tables to exclude completely. Optional.",
                    "structure-tables-list": "A comma-separated list of tables to include for structure, but not data. Optional.",
                    "tables-list": "A comma-separated list of tables to transfer. Optional.",
                    "create-db": {
                        "hidden": true,
                        "description": "Omit DROP TABLE statements. Postgres and Oracle only.  Used by sql-sync, since including the DROP TABLE statements interfere with the import when the database is created."
                    },
                    "data-only": "Dump data without statements to create any of the schema.",
                    "ordered-dump": "Order by primary key and add line breaks for efficient diff in revision control. Slows down the dump. Mysql only.",
                    "gzip": "Compress the dump using the gzip program which must be in your $PATH.",
                    "database": {
                        "description": "The DB connection key if using multiple connections in settings.php.",
                        "example-value": "key"
                    },
                    "target": {
                        "description": "The name of a target within the specified database connection. Defaults to 'default'.",
                        "example-value": "key",
                        "hidden": true
                    },
                    "db-url": {
                        "description": "A Drupal 6 style database URL.",
                        "example-value": "mysql:\/\/root:pass@127.0.0.1\/db"
                    }
                },
                "command": "sql-dump",
                "command-hook": "sql-dump",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "sql",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/sql",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "sql"
            },
            "sql-query": {
                "bootstrap": -1,
                "description": "Execute a query against a database.",
                "examples": {
                    "drush sql-query \"SELECT * FROM users WHERE uid=1\"": "Browse user record. Table prefixes, if used, must be added to table names by hand.",
                    "drush sql-query --db-prefix \"SELECT * FROM {users} WHERE uid=1\"": "Browse user record. Table prefixes are honored.  Caution: curly-braces will be stripped from all portions of the query.",
                    "`drush sql-connect` \u003c example.sql": "Import sql statements from a file into the current database.",
                    "drush sql-query --file=example.sql": "Alternate way to import sql statements from a file."
                },
                "arguments": {
                    "query": "An SQL query. Ignored if 'file' is provided."
                },
                "options": {
                    "result-file": {
                        "description": "Save to a file. The file should be relative to Drupal root. Optional.",
                        "example-value": "\/path\/to\/file"
                    },
                    "file": "Path to a file containing the SQL to be run. Gzip files are accepted.",
                    "extra": {
                        "description": "Add custom options to the mysql command.",
                        "example-value": "--skip-column-names"
                    },
                    "db-prefix": "Enable replacement of braces in your query.",
                    "db-spec": {
                        "description": "A database specification",
                        "hidden": true
                    },
                    "database": {
                        "description": "The DB connection key if using multiple connections in settings.php.",
                        "example-value": "key"
                    },
                    "target": {
                        "description": "The name of a target within the specified database connection. Defaults to 'default'.",
                        "example-value": "key",
                        "hidden": true
                    },
                    "db-url": {
                        "description": "A Drupal 6 style database URL.",
                        "example-value": "mysql:\/\/root:pass@127.0.0.1\/db"
                    }
                },
                "aliases": [
                    "sqlq"
                ],
                "command": "sql-query",
                "command-hook": "sql-query",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "sql",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/sql",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "sql"
            },
            "sql-sanitize": {
                "description": "Run sanitization operations on the current database.",
                "bootstrap": -1,
                "drush dependencies": [
                    "sqlsync"
                ],
                "options": {
                    "sanitize-password": {
                        "description": "The password to assign to all accounts in the sanitization operation, or \"no\" to keep passwords unchanged.",
                        "example-value": "password",
                        "value": "required"
                    },
                    "sanitize-email": {
                        "description": "The pattern for test email addresses in the sanitization operation, or \"no\" to keep email addresses unchanged.  May contain replacement patterns %uid, %mail or %name.",
                        "example-value": "user+%uid@localhost",
                        "value": "required"
                    },
                    "db-prefix": "Enable replacement of braces in sanitize queries.",
                    "db-url": {
                        "description": "A Drupal 6 style database URL.",
                        "example-value": "mysql:\/\/root:pass@127.0.0.1\/db"
                    }
                },
                "aliases": [
                    "sqlsan"
                ],
                "command": "sql-sanitize",
                "command-hook": "sql-sanitize",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "sql",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/sql",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "sql"
            },
            "sql-sync": {
                "description": "Copies the database contents from a source site to a target site. Transfers the database dump via rsync.",
                "bootstrap": -1,
                "drush dependencies": [
                    "sql",
                    "core"
                ],
                "package": "sql",
                "examples": {
                    "drush sql-sync @source @target": "Copy the database from the site with the alias \"source\" to the site with the alias \"target\".",
                    "drush sql-sync prod dev": "Copy the database from the site in \/sites\/prod to the site in \/sites\/dev (multisite installation)."
                },
                "arguments": {
                    "source": "A site-alias or the name of a subdirectory within \/sites whose database you want to copy from.",
                    "target": "A site-alias or the name of a subdirectory within \/sites whose database you want to replace."
                },
                "required-arguments": true,
                "options": {
                    "skip-tables-key": "A key in the $skip_tables array. See example.drushrc.php. Optional.",
                    "skip-tables-list": "A comma-separated list of tables to exclude completely. Optional.",
                    "structure-tables-key": "A key in the $structure_tables array. See example.drushrc.php. Optional.",
                    "structure-tables-list": "A comma-separated list of tables to include for structure, but not data. Optional.",
                    "tables-key": "A key in the $tables array. Optional.",
                    "tables-list": "A comma-separated list of tables to transfer. Optional.",
                    "no-dump": "Do not dump the sql database; always use an existing dump file.",
                    "source-db-url": "Database specification for source system to dump from.",
                    "source-remote-port": "Override sql database port number in source-db-url. Optional.",
                    "source-remote-host": "Remote machine to run sql-dump file on. Optional; default is local machine.",
                    "source-dump": "The destination for the dump file, or the path to the dump file when --no-dump is specified.",
                    "source-database": "A key in the $db_url (D6) or $databases (D7+) array which provides the data.",
                    "source-target": {
                        "description": "A key within the SOURCE database identifying a particular server in the database group.",
                        "example-value": "key",
                        "hidden": true
                    },
                    "target-db-url": "",
                    "target-remote-port": "",
                    "target-remote-host": "",
                    "target-dump": "A path for saving the dump file on target. Mandatory when using --no-sync.",
                    "target-database": "A key in the $db_url (D6) or $databases (D7+) array which shall receive the data.",
                    "target-target": {
                        "description": "Oy. A key within the TARGET database identifying a particular server in the database group.",
                        "example-value": "key",
                        "hidden": true
                    },
                    "create-db": "Create a new database before importing the database dump on the target machine.",
                    "db-su": {
                        "description": "Account to use when creating a new database. Optional.",
                        "example-value": "root"
                    },
                    "db-su-pw": {
                        "description": "Password for the \"db-su\" account. Optional.",
                        "example-value": "pass"
                    },
                    "sanitize": "Obscure email addresses and reset passwords in the user table post-sync."
                },
                "sub-options": {
                    "sanitize": {
                        "sanitize-password": {
                            "description": "The password to assign to all accounts in the sanitization operation, or \"no\" to keep passwords unchanged.",
                            "example-value": "password",
                            "value": "required"
                        },
                        "sanitize-email": {
                            "description": "The pattern for test email addresses in the sanitization operation, or \"no\" to keep email addresses unchanged.  May contain replacement patterns %uid, %mail or %name.",
                            "example-value": "user+%uid@localhost",
                            "value": "required"
                        },
                        "confirm-sanitizations": "Prompt yes\/no after importing the database, but before running the sanitizations"
                    }
                },
                "topics": [
                    "docs-aliases",
                    "docs-policy",
                    "docs-example-sync-via-http",
                    "docs-example-sync-extension"
                ],
                "command": "sql-sync",
                "command-hook": "sql-sync",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "sqlsync",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/sql",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "sql"
            }
        }
    },
    "search": {
        "title": "Search commands",
        "summary": "Interact with Drupal's core search system.",
        "commands": {
            "search-index": {
                "description": "Index the remaining search items without wiping the index.",
                "drupal dependencies": [
                    "search"
                ],
                "command": "search-index",
                "command-hook": "search-index",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "search",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "search",
                "bootstrap": 6
            },
            "search-reindex": {
                "description": "Force the search index to be rebuilt.",
                "drupal dependencies": [
                    "search"
                ],
                "options": {
                    "immediate": "Rebuild the index immediately, instead of waiting for cron."
                },
                "command": "search-reindex",
                "command-hook": "search-reindex",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "search",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "search",
                "bootstrap": 6
            },
            "search-status": {
                "description": "Show how many items remain to be indexed out of the total.",
                "drupal dependencies": [
                    "search"
                ],
                "outputformat": {
                    "default": "message",
                    "pipe-format": "message",
                    "field-labels": {
                        "remaining": "Items not yet indexed",
                        "total": "Total items"
                    },
                    "message-template": "There are !remaining items out of !total still to be indexed.",
                    "pipe-metadata": {
                        "message-template": "!remaining\/!total"
                    },
                    "output-data-type": "format-list"
                },
                "command": "search-status",
                "command-hook": "search-status",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "search",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "message",
                        "pipe-format": "message",
                        "field-labels": {
                            "remaining": "Items not yet indexed",
                            "total": "Total items"
                        },
                        "message-template": "There are !remaining items out of !total still to be indexed.",
                        "pipe-metadata": {
                            "message-template": "!remaining\/!total"
                        },
                        "require-engine-capability": [
                            "format-list"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv-or-string",
                            "key-value",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "var_export",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, list, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=var_export": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "search",
                "bootstrap": 6
            }
        }
    },
    "state": {
        "title": "State commands",
        "summary": "Interact with the State system.",
        "commands": {
            "state-delete": {
                "description": "Delete a state value.",
                "arguments": {
                    "key": "The state key, for example \"system.cron_last\"."
                },
                "required arguments": 1,
                "examples": {
                    "drush state-del system.cron_last": "Delete state entry for system.cron_last."
                },
                "aliases": [
                    "sdel"
                ],
                "core": [
                    "8+"
                ],
                "command": "state-delete",
                "command-hook": "state-delete",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "state",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "state",
                "bootstrap": 6
            },
            "state-get": {
                "description": "Display a state value.",
                "arguments": {
                    "key": "The key name."
                },
                "required-arguments": 1,
                "examples": {
                    "drush state-get system.cron_last": "Displays last cron run timestamp"
                },
                "outputformat": {
                    "default": "json",
                    "pipe-format": "json"
                },
                "aliases": [
                    "sget"
                ],
                "core": [
                    "8+"
                ],
                "command": "state-get",
                "command-hook": "state-get",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "state",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "json",
                        "pipe-format": "json",
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "string",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, csv, list, string, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=string": {
                        "description": "A simple string.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=string": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "state",
                "bootstrap": 6
            },
            "state-set": {
                "description": "Set a state value.",
                "arguments": {
                    "key": "The state key, for example \"system.cron_last\".",
                    "value": "The value to assign to the state key. Use '-' to read from STDIN."
                },
                "required arguments": 2,
                "options": {
                    "format": {
                        "description": "Format to parse the object. Use \"string\" for string (default), and \"yaml\" for YAML.",
                        "example-value": "yaml",
                        "value": "required"
                    },
                    "value": {
                        "description": "The value to assign to the state key (if any).",
                        "hidden": true
                    }
                },
                "examples": {
                    "drush state-set system.cron_last 1406682882": "Sets a timestamp for last cron run."
                },
                "aliases": [
                    "sset"
                ],
                "core": [
                    "8+"
                ],
                "command": "state-set",
                "command-hook": "state-set",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "state",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "state",
                "bootstrap": 6
            }
        }
    },
    "user": {
        "title": "User commands",
        "summary": "Add, modify and delete users.",
        "commands": {
            "user-add-role": {
                "description": "Add a role to the specified user accounts.",
                "aliases": [
                    "urol"
                ],
                "arguments": {
                    "role": "The name of the role to add",
                    "users": "(optional) A comma delimited list of uids, user names, or email addresses."
                },
                "required-arguments": 1,
                "examples": {
                    "drush user-add-role \"power user\" 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com": "Add the \"power user\" role to the accounts with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com"
                },
                "options": {
                    "uid": {
                        "description": "A comma delimited list of uids of users to operate on.",
                        "example-value": "3,5",
                        "value": "required"
                    },
                    "name": {
                        "description": "A comma delimited list of user names of users to operate on.",
                        "example-value": "foo",
                        "value": "required"
                    },
                    "mail": {
                        "description": "A comma delimited list of user mail addresses of users to operate on.",
                        "example-value": "me@example.com",
                        "value": "required"
                    }
                },
                "command": "user-add-role",
                "command-hook": "user-add-role",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "user",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/user",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "user",
                "bootstrap": 6
            },
            "user-block": {
                "description": "Block the specified user(s).",
                "aliases": [
                    "ublk"
                ],
                "arguments": {
                    "users": "A comma delimited list of uids, user names, or email addresses."
                },
                "examples": {
                    "drush user-block 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com": "Block the users with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com"
                },
                "options": {
                    "uid": {
                        "description": "A comma delimited list of uids of users to operate on.",
                        "example-value": "3,5",
                        "value": "required"
                    },
                    "name": {
                        "description": "A comma delimited list of user names of users to operate on.",
                        "example-value": "foo",
                        "value": "required"
                    },
                    "mail": {
                        "description": "A comma delimited list of user mail addresses of users to operate on.",
                        "example-value": "me@example.com",
                        "value": "required"
                    }
                },
                "command": "user-block",
                "command-hook": "user-block",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "user",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/user",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "user",
                "bootstrap": 6
            },
            "user-cancel": {
                "description": "Cancel a user account with the specified name.",
                "aliases": [
                    "ucan"
                ],
                "arguments": {
                    "name": "The name of the account to cancel"
                },
                "bootstrap": 6,
                "required-arguments": true,
                "examples": {
                    "drush user-cancel username": "Cancel the user account with the name username and anonymize all content created by that user."
                },
                "command": "user-cancel",
                "command-hook": "user-cancel",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "user",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/user",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "user"
            },
            "user-create": {
                "description": "Create a user account with the specified name.",
                "aliases": [
                    "ucrt"
                ],
                "arguments": {
                    "name": "The name of the account to add"
                },
                "required-arguments": true,
                "examples": {
                    "drush user-create newuser --mail=\"person@example.com\" --password=\"letmein\"": "Create a new user account with the name newuser, the email address person@example.com, and the password letmein"
                },
                "options": {
                    "password": "The password for the new account",
                    "mail": "The email address for the new account",
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "outputformat": {
                    "default": "key-value-list",
                    "pipe-format": "csv",
                    "field-labels": {
                        "uid": "User ID",
                        "name": "User name",
                        "pass": "Password",
                        "mail": "User mail",
                        "theme": "User theme",
                        "signature": "Signature",
                        "signature_format": "Signature format",
                        "user_created": "User created",
                        "created": "Created",
                        "user_access": "User last access",
                        "access": "Last access",
                        "user_login": "User last login",
                        "login": "Last login",
                        "user_status": "User status",
                        "status": "Status",
                        "timezone": "Time zone",
                        "picture": "User picture",
                        "init": "Initial user mail",
                        "roles": "User roles",
                        "group_audience": "Group Audience",
                        "langcode": "Language code",
                        "uuid": "Uuid"
                    },
                    "format-cell": "csv",
                    "fields-default": [
                        "uid",
                        "name",
                        "mail",
                        "roles",
                        "user_status"
                    ],
                    "fields-pipe": [
                        "name",
                        "uid",
                        "mail",
                        "status",
                        "roles"
                    ],
                    "fields-full": [
                        "uid",
                        "name",
                        "pass",
                        "mail",
                        "theme",
                        "signature",
                        "user_created",
                        "user_access",
                        "user_login",
                        "user_status",
                        "timezone",
                        "roles",
                        "group_audience",
                        "langcode",
                        "uuid"
                    ],
                    "output-data-type": "format-table"
                },
                "command": "user-create",
                "command-hook": "user-create",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "user",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/user",
                "engines": {
                    "outputformat": {
                        "default": "key-value-list",
                        "pipe-format": "csv",
                        "field-labels": {
                            "uid": "User ID",
                            "name": "User name",
                            "pass": "Password",
                            "mail": "User mail",
                            "theme": "User theme",
                            "signature": "Signature",
                            "signature_format": "Signature format",
                            "user_created": "User created",
                            "created": "Created",
                            "user_access": "User last access",
                            "access": "Last access",
                            "user_login": "User last login",
                            "login": "Last login",
                            "user_status": "User status",
                            "status": "Status",
                            "timezone": "Time zone",
                            "picture": "User picture",
                            "init": "Initial user mail",
                            "roles": "User roles",
                            "group_audience": "Group Audience",
                            "langcode": "Language code",
                            "uuid": "Uuid"
                        },
                        "format-cell": "csv",
                        "fields-default": [
                            "uid",
                            "name",
                            "mail",
                            "roles",
                            "user_status"
                        ],
                        "fields-pipe": [
                            "name",
                            "uid",
                            "mail",
                            "status",
                            "roles"
                        ],
                        "fields-full": [
                            "uid",
                            "name",
                            "pass",
                            "mail",
                            "theme",
                            "signature",
                            "user_created",
                            "user_access",
                            "user_login",
                            "user_status",
                            "timezone",
                            "roles",
                            "group_audience",
                            "langcode",
                            "uuid"
                        ],
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "user",
                "bootstrap": 6
            },
            "user-information": {
                "description": "Print information about the specified user(s).",
                "aliases": [
                    "uinf"
                ],
                "examples": {
                    "drush user-information 2,3,someguy,somegal,billgates@microsoft.com": "Display information about the listed users."
                },
                "arguments": {
                    "users": "A comma delimited list of uids, user names, or email addresses."
                },
                "required-arguments": true,
                "outputformat": {
                    "default": "key-value-list",
                    "pipe-format": "csv",
                    "field-labels": {
                        "uid": "User ID",
                        "name": "User name",
                        "pass": "Password",
                        "mail": "User mail",
                        "theme": "User theme",
                        "signature": "Signature",
                        "signature_format": "Signature format",
                        "user_created": "User created",
                        "created": "Created",
                        "user_access": "User last access",
                        "access": "Last access",
                        "user_login": "User last login",
                        "login": "Last login",
                        "user_status": "User status",
                        "status": "Status",
                        "timezone": "Time zone",
                        "picture": "User picture",
                        "init": "Initial user mail",
                        "roles": "User roles",
                        "group_audience": "Group Audience",
                        "langcode": "Language code",
                        "uuid": "Uuid"
                    },
                    "format-cell": "csv",
                    "fields-default": [
                        "uid",
                        "name",
                        "mail",
                        "roles",
                        "user_status"
                    ],
                    "fields-pipe": [
                        "name",
                        "uid",
                        "mail",
                        "status",
                        "roles"
                    ],
                    "fields-full": [
                        "uid",
                        "name",
                        "pass",
                        "mail",
                        "theme",
                        "signature",
                        "user_created",
                        "user_access",
                        "user_login",
                        "user_status",
                        "timezone",
                        "roles",
                        "group_audience",
                        "langcode",
                        "uuid"
                    ],
                    "output-data-type": "format-table"
                },
                "command": "user-information",
                "command-hook": "user-information",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "user",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/user",
                "engines": {
                    "outputformat": {
                        "default": "key-value-list",
                        "pipe-format": "csv",
                        "field-labels": {
                            "uid": "User ID",
                            "name": "User name",
                            "pass": "Password",
                            "mail": "User mail",
                            "theme": "User theme",
                            "signature": "Signature",
                            "signature_format": "Signature format",
                            "user_created": "User created",
                            "created": "Created",
                            "user_access": "User last access",
                            "access": "Last access",
                            "user_login": "User last login",
                            "login": "Last login",
                            "user_status": "User status",
                            "status": "Status",
                            "timezone": "Time zone",
                            "picture": "User picture",
                            "init": "Initial user mail",
                            "roles": "User roles",
                            "group_audience": "Group Audience",
                            "langcode": "Language code",
                            "uuid": "Uuid"
                        },
                        "format-cell": "csv",
                        "fields-default": [
                            "uid",
                            "name",
                            "mail",
                            "roles",
                            "user_status"
                        ],
                        "fields-pipe": [
                            "name",
                            "uid",
                            "mail",
                            "status",
                            "roles"
                        ],
                        "fields-full": [
                            "uid",
                            "name",
                            "pass",
                            "mail",
                            "theme",
                            "signature",
                            "user_created",
                            "user_access",
                            "user_login",
                            "user_status",
                            "timezone",
                            "roles",
                            "group_audience",
                            "langcode",
                            "uuid"
                        ],
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "user",
                "bootstrap": 6
            },
            "user-login": {
                "description": "Display a one time login link for the given user account (defaults to uid 1).",
                "aliases": [
                    "uli"
                ],
                "bootstrap": -1,
                "handle-remote-commands": true,
                "arguments": {
                    "user": "An optional uid, user name, or email address for the user to log in as. Default is to log in as uid 1. The uid\/name\/mail options take priority if specified.",
                    "path": "Optional path to redirect to after logging in."
                },
                "options": {
                    "browser": "Optional value denotes which browser to use (defaults to operating system default). Set to 0 to suppress opening a browser.",
                    "uid": "A uid to log in as.",
                    "redirect-port": "A custom port for redirecting to (e.g. when running within a Vagrant environment)",
                    "name": "A user name to log in as.",
                    "mail": "A user mail address to log in as."
                },
                "examples": {
                    "drush user-login ryan node\/add\/blog": "Displays and opens default web browser (if configured or detected) for a one-time login link for the user with the username ryan and redirect to the path node\/add\/blog.",
                    "drush user-login --browser=firefox --mail=drush@example.org admin\/settings\/performance": "Open firefox web browser, login as the user with the e-mail address drush@example.org and redirect to the path admin\/settings\/performance."
                },
                "command": "user-login",
                "command-hook": "user-login",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "user",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/user",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "user"
            },
            "user-password": {
                "description": "(Re)Set the password for the user account with the specified name.",
                "aliases": [
                    "upwd"
                ],
                "arguments": {
                    "name": "The name of the account to modify."
                },
                "required-arguments": true,
                "options": {
                    "password": {
                        "description": "The new password for the account.",
                        "required": true,
                        "example-value": "foo"
                    }
                },
                "examples": {
                    "drush user-password someuser --password=\"correct horse battery staple\"": "Set the password for the username someuser. @see xkcd.com\/936"
                },
                "command": "user-password",
                "command-hook": "user-password",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "user",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/user",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "user",
                "bootstrap": 6
            },
            "user-remove-role": {
                "description": "Remove a role from the specified user accounts.",
                "aliases": [
                    "urrol"
                ],
                "arguments": {
                    "role": "The name of the role to remove",
                    "users": "(optional) A comma delimited list of uids, user names, or email addresses."
                },
                "required-arguments": 1,
                "examples": {
                    "drush user-remove-role \"power user\" 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com": "Remove the \"power user\" role from the accounts with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com"
                },
                "options": {
                    "uid": {
                        "description": "A comma delimited list of uids of users to operate on.",
                        "example-value": "3,5",
                        "value": "required"
                    },
                    "name": {
                        "description": "A comma delimited list of user names of users to operate on.",
                        "example-value": "foo",
                        "value": "required"
                    },
                    "mail": {
                        "description": "A comma delimited list of user mail addresses of users to operate on.",
                        "example-value": "me@example.com",
                        "value": "required"
                    }
                },
                "command": "user-remove-role",
                "command-hook": "user-remove-role",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "user",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/user",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "user",
                "bootstrap": 6
            },
            "user-unblock": {
                "description": "Unblock the specified user(s).",
                "aliases": [
                    "uublk"
                ],
                "arguments": {
                    "users": "A comma delimited list of uids, user names, or email addresses."
                },
                "examples": {
                    "drush user-unblock 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com": "Unblock the users with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com"
                },
                "options": {
                    "uid": {
                        "description": "A comma delimited list of uids of users to operate on.",
                        "example-value": "3,5",
                        "value": "required"
                    },
                    "name": {
                        "description": "A comma delimited list of user names of users to operate on.",
                        "example-value": "foo",
                        "value": "required"
                    },
                    "mail": {
                        "description": "A comma delimited list of user mail addresses of users to operate on.",
                        "example-value": "me@example.com",
                        "value": "required"
                    }
                },
                "command": "user-unblock",
                "command-hook": "user-unblock",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "user",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/user",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "user",
                "bootstrap": 6
            }
        }
    },
    "watchdog": {
        "title": "Watchdog commands",
        "summary": "Interact with Drupal's db logging system.",
        "commands": {
            "watchdog-delete": {
                "description": "Delete watchdog messages.",
                "drupal dependencies": [
                    "dblog"
                ],
                "options": {
                    "severity": "Delete messages of a given severity level.",
                    "type": "Delete messages of a given type."
                },
                "examples": {
                    "drush watchdog-delete all": "Delete all messages.",
                    "drush watchdog-delete 64": "Delete messages with id 64.",
                    "drush watchdog-delete \"cron run succesful\"": "Delete messages containing the string \"cron run succesful\".",
                    "drush watchdog-delete --severity=notice": "Delete all messages with a severity of notice.",
                    "drush watchdog-delete --type=cron": "Delete all messages of type cron."
                },
                "aliases": [
                    "wd-del",
                    "wd-delete"
                ],
                "command": "watchdog-delete",
                "command-hook": "watchdog-delete",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "watchdog",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "watchdog",
                "bootstrap": 6
            },
            "watchdog-list": {
                "description": "Show available message types and severity levels. A prompt will ask for a choice to show watchdog messages.",
                "drupal dependencies": [
                    "dblog"
                ],
                "outputformat": {
                    "default": "table",
                    "pipe-format": "var_export",
                    "field-labels": {
                        "wid": "ID",
                        "type": "Type",
                        "message": "Message",
                        "severity": "Severity",
                        "location": "Location",
                        "hostname": "Hostname",
                        "date": "Date",
                        "username": "Username"
                    },
                    "fields-default": [
                        "wid",
                        "date",
                        "type",
                        "severity",
                        "message"
                    ],
                    "column-widths": {
                        "type": 8,
                        "severity": 8
                    },
                    "output-data-type": "format-table"
                },
                "aliases": [
                    "wd-list"
                ],
                "command": "watchdog-list",
                "command-hook": "watchdog-list",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "watchdog",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "table",
                        "pipe-format": "var_export",
                        "field-labels": {
                            "wid": "ID",
                            "type": "Type",
                            "message": "Message",
                            "severity": "Severity",
                            "location": "Location",
                            "hostname": "Hostname",
                            "date": "Date",
                            "username": "Username"
                        },
                        "fields-default": [
                            "wid",
                            "date",
                            "type",
                            "severity",
                            "message"
                        ],
                        "column-widths": {
                            "type": 8,
                            "severity": 8
                        },
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": {
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "watchdog",
                "bootstrap": 6
            },
            "watchdog-show": {
                "description": "Show watchdog messages.",
                "drupal dependencies": [
                    "dblog"
                ],
                "arguments": {
                    "wid": "Optional id of a watchdog message to show in detail. If not provided, a listing of most recent 10 messages will be displayed. Alternatively if a string is provided, watchdog messages will be filtered by it."
                },
                "options": {
                    "count": "The number of messages to show. Defaults to 10.",
                    "severity": "Restrict to messages of a given severity level.",
                    "type": "Restrict to messages of a given type.",
                    "tail": "Continuously show new watchdog messages until interrupted.",
                    "sleep-delay": "To be used in conjunction with --tail. This is the number of seconds to wait between each poll to the database. Delay is 1 second by default.",
                    "extended": "Return extended information about each message.",
                    "format": {
                        "description": "Select output format. Available: json, csv, list, table, var_export, yaml. Default is json.",
                        "example-value": "json"
                    },
                    "fields": {
                        "description": "Fields to output.",
                        "example-value": "field1,field2",
                        "value": "required",
                        "list": true
                    },
                    "list-separator": {
                        "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                        "hidden": true
                    },
                    "line-separator": {
                        "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                        "hidden": true
                    },
                    "field-labels": {
                        "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                        "default": "1",
                        "key": "include-field-labels"
                    },
                    "format=json": {
                        "description": "Javascript Object Notation.",
                        "hidden": true
                    },
                    "format=config": {
                        "description": "A configuration file in executable php format. The variable name is \"config\", and the variable keys are taken from the output data array's keys.",
                        "hidden": true
                    },
                    "format=csv": {
                        "description": "A list of values, one per row, each of which is a comma-separated list of values.",
                        "hidden": true
                    },
                    "format=labeled-export": {
                        "description": "A list of php exports, labeled with a name.",
                        "hidden": true
                    },
                    "format=list": {
                        "description": "A simple list of values.",
                        "hidden": true
                    },
                    "format=php": {
                        "description": "A serialized php string.",
                        "hidden": true
                    },
                    "format=print-r": {
                        "description": "Output via php print_r function.",
                        "hidden": true
                    },
                    "format=table": {
                        "description": "A formatted, word-wrapped table.",
                        "hidden": true
                    },
                    "format=var_export": {
                        "description": "An array in executable php format.",
                        "hidden": true
                    },
                    "format=variables": {
                        "description": "A list of php variable assignments.",
                        "hidden": true
                    },
                    "format=yaml": {
                        "description": "Yaml output format.",
                        "hidden": true
                    }
                },
                "examples": {
                    "drush watchdog-show": "Show a listing of most recent 10 messages.",
                    "drush watchdog-show 64": "Show in detail message with id 64.",
                    "drush watchdog-show \"cron run succesful\"": "Show a listing of most recent 10 messages containing the string \"cron run succesful\".",
                    "drush watchdog-show --count=46": "Show a listing of most recent 46 messages.",
                    "drush watchdog-show --severity=notice": "Show a listing of most recent 10 messages with a severity of notice.",
                    "drush watchdog-show --type=php": "Show a listing of most recent 10 messages of type php.",
                    "drush watchdog-show --tail --extended": "Show a listing of most recent 10 messages with extended information about each one and continue showing messages as they are registered in the watchdog.",
                    "drush watchdog-show --tail --sleep-delay=2": "Do a tail of the watchdog with a delay of two seconds between each poll to the database."
                },
                "outputformat": {
                    "default": "table",
                    "pipe-format": "var_export",
                    "field-labels": {
                        "wid": "ID",
                        "type": "Type",
                        "message": "Message",
                        "severity": "Severity",
                        "location": "Location",
                        "hostname": "Hostname",
                        "date": "Date",
                        "username": "Username"
                    },
                    "fields-default": [
                        "wid",
                        "date",
                        "type",
                        "severity",
                        "message"
                    ],
                    "column-widths": {
                        "type": 8,
                        "severity": 8
                    },
                    "output-data-type": "format-table"
                },
                "aliases": [
                    "wd-show",
                    "ws"
                ],
                "command": "watchdog-show",
                "command-hook": "watchdog-show",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "watchdog",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/core",
                "engines": {
                    "outputformat": {
                        "default": "table",
                        "pipe-format": "var_export",
                        "field-labels": {
                            "wid": "ID",
                            "type": "Type",
                            "message": "Message",
                            "severity": "Severity",
                            "location": "Location",
                            "hostname": "Hostname",
                            "date": "Date",
                            "username": "Username"
                        },
                        "fields-default": [
                            "wid",
                            "date",
                            "type",
                            "severity",
                            "message"
                        ],
                        "column-widths": {
                            "type": 8,
                            "severity": 8
                        },
                        "require-engine-capability": [
                            "format-table"
                        ],
                        "description": "Output formatting options selection and use.",
                        "topic": "docs-output-formats",
                        "topic-file": "docs\/output-formats.md",
                        "combine-help": true,
                        "option": "format",
                        "options": {
                            "format": {
                                "description": "Select output format.",
                                "example-value": "json"
                            },
                            "fields": {
                                "description": "Fields to output.",
                                "example-value": "field1,field2",
                                "value": "required",
                                "list": true
                            },
                            "list-separator": {
                                "description": "Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.",
                                "hidden": true
                            },
                            "line-separator": {
                                "description": "In nested lists of lists, specify how the outer lists (\"lines\") should be separated.",
                                "hidden": true
                            },
                            "field-labels": {
                                "description": "Add field labels before first line of data. Default is on; --field-labels=0 to disable.",
                                "default": "1",
                                "key": "include-field-labels"
                            }
                        },
                        "config-aliases": {
                            "output-data-type": "require-engine-capability"
                        },
                        "sub-options": [],
                        "add-options-to-command": false,
                        "usable": [
                            "json",
                            "config",
                            "csv",
                            "csv-or-string",
                            "key-value",
                            "key-value-list",
                            "labeled-export",
                            "list",
                            "message",
                            "nested-csv",
                            "php",
                            "print-r",
                            "table",
                            "var_export",
                            "variables",
                            "yaml"
                        ]
                    }
                },
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": {
                    "format=json": [],
                    "format=config": [],
                    "format=csv": [],
                    "format=labeled-export": [],
                    "format=list": [],
                    "format=php": [],
                    "format=print-r": [],
                    "format=table": [],
                    "format=var_export": [],
                    "format=variables": [],
                    "format=yaml": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "watchdog",
                "bootstrap": 6
            }
        }
    },
    "make": {
        "title": "All commands in make",
        "commands": {
            "make": {
                "bootstrap": -1,
                "description": "Turns a makefile into a working Drupal codebase.",
                "arguments": {
                    "makefile": "Filename of the makefile to use for this build.",
                    "build path": "The path at which to build the makefile."
                },
                "examples": {
                    "drush make example.make example": "Build the example.make makefile in the example directory.",
                    "drush make --no-core --contrib-destination=. installprofile.make": "Build an installation profile within an existing Drupal site",
                    "drush make http:\/\/example.com\/example.make example": "Build the remote example.make makefile in the example directory.",
                    "drush make example.make --no-build --lock=example.lock": "Write a new makefile to example.lock. All project versions will be resolved."
                },
                "options": {
                    "version": "Print the make API version and exit.",
                    "concurrency": {
                        "description": "Set the number of concurrent projects that will be processed at the same time. The default is 1.",
                        "example-value": "1"
                    },
                    "contrib-destination": "Specify a path under which modules and themes should be placed. Defaults to sites\/all for Drupal 6,7 and the corresponding directory in the Drupal root for Drupal 8 and above.",
                    "force-complete": "Force a complete build even if errors occur.",
                    "ignore-checksums": "Ignore md5 checksums for downloads.",
                    "md5": {
                        "description": "Output an md5 hash of the current build after completion. Use --md5=print to print to stdout.",
                        "example-value": "print",
                        "value": "optional"
                    },
                    "make-update-default-url": "The default location to load the XML update information from.",
                    "no-build": "Do not build a codebase. Makes the `build path` argument optional.",
                    "no-cache": "Do not use the pm-download caching (defaults to cache enabled).",
                    "no-clean": "Leave temporary build directories in place instead of cleaning up after completion.",
                    "no-core": "Do not require a Drupal core project to be specified.",
                    "no-recursion": "Do not recurse into the makefiles of any downloaded projects; you can also set [do_recursion] = 0 on a per-project basis in the makefile.",
                    "no-patch-txt": "Do not write a PATCHES.txt file in the directory of each patched project.",
                    "no-gitinfofile": "Do not modify .info files when cloning from Git.",
                    "force-gitinfofile": "Force a modification of .info files when cloning from Git even if repository isn't hosted on Drupal.org.",
                    "no-gitprojectinfo": "Do not inject project info into .info files when cloning from Git.",
                    "overwrite": "Overwrite existing directories. Default is to merge.",
                    "prepare-install": "Prepare the built site for installation. Generate a properly permissioned settings.php and files directory.",
                    "tar": "Generate a tar archive of the build. The output filename will be [build path].tar.gz.",
                    "test": "Run a temporary test build and clean up.",
                    "translations": "Retrieve translations for the specified comma-separated list of language(s) if available for all projects.",
                    "working-copy": "Preserves VCS directories, like .git, for projects downloaded using such methods.",
                    "download-mechanism": "How to download files. Should be autodetected, but this is an override if it doesn't work. Options are \"curl\" and \"make\" (a native download method).",
                    "projects": {
                        "description": "Restrict the make to this comma-separated list of projects. To specify all projects, pass *.",
                        "example-value": "views,ctools"
                    },
                    "libraries": {
                        "description": "Restrict the make to this comma-separated list of libraries. To specify all libraries, pass *.",
                        "example-value": "tinymce"
                    },
                    "allow-override": {
                        "description": "Restrict the make options to a comma-separated list. Defaults to unrestricted."
                    },
                    "lock": {
                        "description": "Generate a makefile, based on the one passed in, with all versions *resolved*. Defaults to printing to the terminal, but an output file may be provided.",
                        "example-value": "example.make.lock"
                    },
                    "shallow-clone": {
                        "description": "For makefile entries which use git for downloading, this option will utilize shallow clones where possible (ie. by using the git-clone's depth=1 option). If the \"working-copy\" option is not desired, this option will significantly speed up makes which involve modules stored in very large git repos. In fact, if \"working-copy\" option is enabled, this option cannot be used."
                    },
                    "source": "The base URL which provides project release history in XML. Defaults to http:\/\/updates.drupal.org\/release-history.",
                    "dev": "Work with development releases solely."
                },
                "engines": {
                    "release_info": {
                        "add-options-to-command": true,
                        "description": "",
                        "option": false,
                        "default": null,
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "combine-help": false
                    }
                },
                "topics": [
                    "docs-make",
                    "docs-make-example"
                ],
                "command": "make",
                "command-hook": "make",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "make",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/make",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": {
                    "cache": {
                        "cache-duration-releasexml": "Expire duration (in seconds) for release XML. Defaults to 86400 (24 hours)."
                    },
                    "select": {
                        "all": "Shows all available releases instead of a short list of recent releases."
                    }
                },
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "hidden": false,
                "category": "make"
            },
            "make-convert": {
                "bootstrap": -1,
                "description": "Convert a legacy makefile into YAML format.",
                "arguments": {
                    "makefile": "Filename of the makefile to convert."
                },
                "options": {
                    "projects": {
                        "description": "Restrict the make to this comma-separated list of projects. To specify all projects, pass *.",
                        "example-value": "views,ctools"
                    },
                    "libraries": {
                        "description": "Restrict the make to this comma-separated list of libraries. To specify all libraries, pass *.",
                        "example-value": "tinymce"
                    }
                },
                "required-arguments": true,
                "examples": {
                    "drush make-convert example.make": "Convert example.make to example.make.yml"
                },
                "command": "make-convert",
                "command-hook": "make-convert",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "make",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/make",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "make"
            },
            "make-generate": {
                "bootstrap": 5,
                "description": "Generate a makefile from the current Drupal site.",
                "examples": {
                    "drush generate-makefile example.make": "Generate a makefile with ALL projects versioned (should a project have a known version number)",
                    "drush generate-makefile example.make --exclude-versions": "Generate a makefile with NO projects versioned",
                    "drush generate-makefile example.make --exclude-versions=drupal,views,cck": "Generate a makefile with ALL projects versioned EXCEPT core, Views and CCK",
                    "drush generate-makefile example.make --include-versions=admin_menu,og,ctools (--exclude-versions)": "Generate a makefile with NO projects versioned EXCEPT Admin Menu, OG and CTools."
                },
                "options": {
                    "exclude-versions": "Exclude all version numbers (default is include all version numbers) or optionally specify a list of projects to exclude from versioning",
                    "include-versions": "Include a specific list of projects, while all other projects remain unversioned in the makefile (so implies --exclude-versions)",
                    "source": "The base URL which provides project release history in XML. Defaults to http:\/\/updates.drupal.org\/release-history.",
                    "dev": "Work with development releases solely."
                },
                "engines": {
                    "release_info": {
                        "add-options-to-command": true,
                        "description": "",
                        "option": false,
                        "default": null,
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "combine-help": false
                    }
                },
                "aliases": [
                    "generate-makefile"
                ],
                "command": "make-generate",
                "command-hook": "make-generate",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "make",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/make",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": {
                    "cache": {
                        "cache-duration-releasexml": "Expire duration (in seconds) for release XML. Defaults to 86400 (24 hours)."
                    },
                    "select": {
                        "all": "Shows all available releases instead of a short list of recent releases."
                    }
                },
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "make"
            },
            "make-update": {
                "bootstrap": -1,
                "description": "Process a makefile and outputs an equivalent makefile with projects version resolved to latest available.",
                "arguments": {
                    "makefile": "Filename of the makefile to use for this build."
                },
                "options": {
                    "result-file": {
                        "description": "Save to a file. If not provided, the updated makefile will be dump to stdout.",
                        "example-value": "updated.make"
                    },
                    "source": "The base URL which provides project release history in XML. Defaults to http:\/\/updates.drupal.org\/release-history.",
                    "dev": "Work with development releases solely.",
                    "update-backend": {
                        "description": "Backend to obtain available updates. Available: drush, drupal. Default is drush."
                    },
                    "check-disabled": "Check for updates of disabled modules and themes.",
                    "security-only": "Only update modules that have security updates available.",
                    "update-backend=drush": {
                        "description": "Check available updates without update.module.",
                        "hidden": true
                    },
                    "update-backend=drupal": {
                        "description": "Check available updates with update.module.",
                        "hidden": true
                    }
                },
                "engines": {
                    "release_info": {
                        "add-options-to-command": true,
                        "description": "",
                        "option": false,
                        "default": null,
                        "options": [],
                        "sub-options": [],
                        "config-aliases": [],
                        "combine-help": false
                    },
                    "update_status": {
                        "option": "update-backend",
                        "description": "Determine how to fetch update status information.",
                        "default": "drush",
                        "add-options-to-command": true,
                        "options": {
                            "update-backend": "Backend to obtain available updates.",
                            "check-disabled": "Check for updates of disabled modules and themes.",
                            "security-only": "Only update modules that have security updates available."
                        },
                        "combine-help": true,
                        "sub-options": [],
                        "config-aliases": [],
                        "usable": [
                            "drush",
                            "drupal"
                        ]
                    }
                },
                "command": "make-update",
                "command-hook": "make-update",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "make",
                "path": "\/Users\/mbell\/Projects\/drush-docset2\/vendor\/drush\/drush\/commands\/make",
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": {
                    "cache": {
                        "cache-duration-releasexml": "Expire duration (in seconds) for release XML. Defaults to 86400 (24 hours)."
                    },
                    "select": {
                        "all": "Shows all available releases instead of a short list of recent releases."
                    },
                    "update-backend=drush": [],
                    "update-backend=drupal": []
                },
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "make"
            }
        }
    },
    "module_builder": {
        "title": "All commands in module_builder",
        "commands": {
            "mb-analyze": {
                "callback": "drush_command",
                "description": "List the hooks found in a given module.",
                "aliases": [
                    "mban"
                ],
                "options": {
                    "flat": "Shows a flat list of hooks rather than grouped by file."
                },
                "command": "mb-analyze",
                "command-hook": "mb-analyze",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "module_builder",
                "path": "\/Users\/mbell\/.drush\/module_builder\/drush",
                "engines": [],
                "primary function": "drush_module_builder_callback_hook_analyze",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "module_builder",
                "bootstrap": 6
            },
            "mb-build": {
                "callback": "drush_command",
                "description": "Generate the code for a new Drupal module, including file headers and hook implementations.",
                "arguments": {
                    "module name": "The machine name of the module. Use '.' to specify the current folder name.",
                    "hooks": "Short names of hooks, separated by spaces.",
                    "presets:": "Names of preset groups of hooks, e.g., 'block'.\nUse the 'presets:' marker to separate this from prior commands, eg 'mymodule hook_a hook_b presets: block'.",
                    "plugins:": "Names of plugin types, using the suffix of the plugin manager service ID, e.g., 'block'.\nUse the 'plugins:' marker to separate this from prior commands, eg 'mymodule hook_a hook_b plugins: block'.",
                    "routes:": "Menu paths, separated by spaces. \nUse the 'routes:' marker to separate this from prior commands, eg 'mymodule hook_a hook_b routes: module\/path module\/otherpath'.",
                    "settings_form!": "Add this argument to add a settings form to the module."
                },
                "aliases": [
                    "mb"
                ],
                "options": {
                    "noi": "Disables interactive mode.",
                    "data": "Location to read hook data. May be absolute, or relative to Drupal files dir. Defaults to 'files\/hooks'.",
                    "build": "Which module components to generate:\n  - 'info' makes the info file.\n  - 'readme' makes README file.\n  - 'api' makes an api.php file to document hooks. It will parse existing module files for calls to module_invoke_all() and use those as starter file content.\n  - 'tests' makes the tests folder and test case file.\n  - 'module', 'install' make the foo.module or foo.install file respectively.\n  - 'FILE': If custom modules define other files to output, you can request those too, omitting the module root name part and any .inc extension, eg 'views' for 'foo.views.inc.\n  - 'code' generates code files as needed: the module and install files, and any files requested by hooks.\n  - 'all' generates everything, including any code files needed by the requested hooks.\nDefault is 'all' if writing new files, 'code' if appending to file or outputting only to terminal.",
                    "write": "Write files to sites\/all\/modules. Will prompt to overwrite existing files; use yes to force. Use quiet to suppress output to the terminal.",
                    "go": "Write all module files and enable the new module. Take two commands into the shower? Not me.",
                    "add": "Append hooks to module file. Implies 'write build=code'. Warning: will not check hooks already exist.",
                    "name": "Readable name of the module.",
                    "desc": "Description (for the admin module list).",
                    "helptext": "Module help text (for the system help).",
                    "dep": "Dependencies, separated by spaces, eg \"forum views\".",
                    "package": "Module package.",
                    "parent": "Name of a module folder to place this new module into; use if this module is to be added to an existing package. Use '.' for the current working directory."
                },
                "examples": {
                    "drush mb my_module menu cron nodeapi": "Generate module code with hook_menu, hook_cron, hook_nodeapi.",
                    "drush mb my_module --build=info --name=\"My module\" --dep=\"forum views\"": "Generate module info with readable name and dependencies.",
                    "drush mb my_module menu cron --write --name=\"My module\" --dep=\"forum views\"": "Generate both module files, write files and also output to terminal.",
                    "drush mb my_module menu cron --write ": "Generate module code, write files and also output to terminal.",
                    "drush mb my_module menu cron --write --quiet --name=\"My module\" --dep=\"forum views\"": "Generate both module files, write files and output nothing to terminal.",
                    "drush mb my_module menu cron --add": "Generate code for hook_cron and add it to the existing my_module.module file.",
                    "drush mb my_module menu cron --write --parent=cck": "Generate both module files, write files to a folder my_module inside the cck folder.",
                    "drush mb my_module menu cron --write --parent=.": "Generate both module files, write files to a folder my_module in the current working directory."
                },
                "command": "mb-build",
                "command-hook": "mb-build",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "module_builder",
                "path": "\/Users\/mbell\/.drush\/module_builder\/drush",
                "engines": [],
                "primary function": "drush_module_builder_callback_build_module",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "module_builder",
                "bootstrap": 6
            },
            "mb-component": {
                "callback": "drush_command",
                "aliases": [
                    "mbc"
                ],
                "description": "Generate a Drupal component, such as a module or profile.",
                "arguments": {
                    "component type": "The type of component, e.g., 'module'."
                },
                "options": {
                    "write": "Write the component to the current site codebase. Will prompt to overwrite existing files; use yes to force. Use quiet to suppress output to the terminal."
                },
                "command": "mb-component",
                "command-hook": "mb-component",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "module_builder",
                "path": "\/Users\/mbell\/.drush\/module_builder\/drush",
                "engines": [],
                "primary function": "drush_module_builder_callback_build_component",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "module_builder",
                "bootstrap": 6
            },
            "mb-debug": {
                "callback": "drush_command",
                "description": "Debug module builder. Does whatever was needed at the time.",
                "command": "mb-debug",
                "command-hook": "mb-debug",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "module_builder",
                "path": "\/Users\/mbell\/.drush\/module_builder\/drush",
                "engines": [],
                "primary function": "drush_module_builder_callback_debug",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "module_builder",
                "bootstrap": 6
            },
            "mb-dir": {
                "callback": "drush_command",
                "description": "Print the location of the module builder data directory.",
                "command": "mb-dir",
                "command-hook": "mb-dir",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "module_builder",
                "path": "\/Users\/mbell\/.drush\/module_builder\/drush",
                "engines": [],
                "primary function": "drush_module_builder_callback_get_data_dir",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "module_builder",
                "bootstrap": 6
            },
            "mb-dochooks": {
                "callback": "drush_command",
                "description": "Adds comment headers to hooks that need them in the given module.",
                "command": "mb-dochooks",
                "command-hook": "mb-dochooks",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "module_builder",
                "path": "\/Users\/mbell\/.drush\/module_builder\/drush",
                "engines": [],
                "primary function": "drush_module_builder_callback_doc_hooks",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "module_builder",
                "bootstrap": 6
            },
            "mb-docparams": {
                "callback": "drush_command",
                "description": "Adds params... WIP!",
                "command": "mb-docparams",
                "command-hook": "mb-docparams",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "module_builder",
                "path": "\/Users\/mbell\/.drush\/module_builder\/drush",
                "engines": [],
                "primary function": "drush_module_builder_callback_doc_params",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "module_builder",
                "bootstrap": 6
            },
            "mb-download": {
                "callback": "drush_command",
                "description": "Update module_builder hook data.",
                "options": {
                    "data": "Location to save downloaded files. May be absolute, or relative to Drupal files dir. Defaults to 'files\/hooks'."
                },
                "aliases": [
                    "mbdl"
                ],
                "command": "mb-download",
                "command-hook": "mb-download",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "module_builder",
                "path": "\/Users\/mbell\/.drush\/module_builder\/drush",
                "engines": [],
                "primary function": "drush_module_builder_callback_hook_download",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "module_builder",
                "bootstrap": 6
            },
            "mb-list": {
                "callback": "drush_command",
                "description": "List the hooks module_builder knows about.",
                "arguments": {
                    "modules": "(optional) Names of modules, separated by spaces."
                },
                "options": {
                    "raw": "Outputs the raw debug hook data."
                },
                "command": "mb-list",
                "command-hook": "mb-list",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "module_builder",
                "path": "\/Users\/mbell\/.drush\/module_builder\/drush",
                "engines": [],
                "primary function": "drush_module_builder_callback_hook_list",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "module_builder",
                "bootstrap": 6
            },
            "mb-theme": {
                "callback": "drush_command",
                "aliases": [
                    "mbt"
                ],
                "description": "TODO.",
                "arguments": {
                    "theme name": "The machine name of the theme. Use '.' to specify the current folder name.",
                    "themeables": "Short names of templates or theme functions, separated by spaces."
                },
                "options": {
                    "write": "Write files to sites\/all\/modules. Will prompt to overwrite existing files; use yes to force. Use quiet to suppress output to the terminal.",
                    "parent": "Name of a theme folder to place this new theme into; use if this theme is to be added to an existing package. Use '.' for the current working directory."
                },
                "command": "mb-theme",
                "command-hook": "mb-theme",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "module_builder",
                "path": "\/Users\/mbell\/.drush\/module_builder\/drush",
                "engines": [],
                "primary function": "drush_module_builder_callback_build_theme",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "module_builder",
                "bootstrap": 6
            }
        }
    },
    "views": {
        "title": "All commands in views",
        "commands": {
            "views-analyze": {
                "drupal dependencies": [
                    "views",
                    "views_ui"
                ],
                "description": "Get a list of all Views analyze warnings",
                "bootstrap": 5,
                "aliases": [
                    "va"
                ],
                "command": "views-analyze",
                "command-hook": "views-analyze",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "views",
                "path": "\/Users\/mbell\/.drush\/views\/drush",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "views"
            },
            "views-dev": {
                "callback": "drush_command",
                "drupal dependencies": [
                    "views"
                ],
                "description": "Set the Views settings to more developer-oriented values.",
                "bootstrap": 5,
                "aliases": [
                    "vd"
                ],
                "command": "views-dev",
                "command-hook": "views-dev",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "views",
                "path": "\/Users\/mbell\/.drush\/views\/drush",
                "engines": [],
                "primary function": "views_development_settings",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "views"
            },
            "views-disable": {
                "drupal dependencies": [
                    "views"
                ],
                "description": "Disable the specified views.",
                "arguments": {
                    "views": "A space delimited list of view names."
                },
                "aliases": [
                    "vdis"
                ],
                "examples": {
                    "drush vdis frontpage taxonomy_term": "Disable the frontpage and taxonomy_term views."
                },
                "command": "views-disable",
                "command-hook": "views-disable",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "views",
                "path": "\/Users\/mbell\/.drush\/views\/drush",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "views",
                "bootstrap": 6
            },
            "views-enable": {
                "drupal dependencies": [
                    "views"
                ],
                "description": "Enable the specified views.",
                "arguments": {
                    "views": "A space delimited list of view names."
                },
                "aliases": [
                    "ven"
                ],
                "examples": {
                    "drush ven frontpage taxonomy_term": "Enable the frontpage and taxonomy_term views."
                },
                "command": "views-enable",
                "command-hook": "views-enable",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "views",
                "path": "\/Users\/mbell\/.drush\/views\/drush",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "views",
                "bootstrap": 6
            },
            "views-list": {
                "drupal dependencies": [
                    "views"
                ],
                "description": "Get a list of all views in the system.",
                "bootstrap": 5,
                "aliases": [
                    "vl"
                ],
                "options": {
                    "name": "String contained in view's name by which filter the results.",
                    "tags": "A comma-separated list of views tags by which to filter the results.",
                    "status": "Status of the views by which to filter the results. Choices: enabled, disabled.",
                    "type": "Type of the views by which to filter the results. Choices: normal, default or overridden."
                },
                "examples": {
                    "drush vl": "Show a list of all available views.",
                    "drush vl --name=blog": "Show a list of views which names contain \"blog\".",
                    "drush vl --tags=tag1,tag2": "Show a list of views tagged with \"tag1\" or \"tag2\".",
                    "drush vl --status=enabled": "Show a list of enabled views.",
                    "drush vl --type=overridden": "Show a list of overridden views."
                },
                "command": "views-list",
                "command-hook": "views-list",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "views",
                "path": "\/Users\/mbell\/.drush\/views\/drush",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "views"
            },
            "views-revert": {
                "callback": "drush_command",
                "drupal dependencies": [
                    "views"
                ],
                "description": "Revert overridden views to their default state. Make sure to backup first.",
                "arguments": {
                    "views": "A space delimited list of view names."
                },
                "bootstrap": 5,
                "aliases": [
                    "vr"
                ],
                "options": {
                    "all": "If provided, all views will be reverted."
                },
                "examples": {
                    "drush vr archive": "Reverts the \"archive\" view.",
                    "drush rln archive frontpage": "Reverts the \"archive\" and \"frontpage\" view.",
                    "drush vr": "Will present you with a list of overridden views to choose from, and an option to revert all overridden views.",
                    "drush vr --all": "Will revert all overridden views."
                },
                "command": "views-revert",
                "command-hook": "views-revert",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "views",
                "path": "\/Users\/mbell\/.drush\/views\/drush",
                "engines": [],
                "primary function": "views_revert_views",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "views"
            }
        }
    },
    "coder,coder_review": {
        "title": "Other commands",
        "commands": {
            "coder-format": {
                "description": "Re-format and rewrite code according Drupal coding standards.",
                "arguments": {
                    "path": "The path of a file to reformat. Or the name of a directory to (recursively) reformat all contained files within."
                },
                "options": {
                    "undo": "Restores already processed files from backups generated by Coder format. Automatically searches for the latest backup file ([filename].coder.orig) and each file is replaced with its original version."
                },
                "examples": {
                    "drush coder-format sites\/all\/modules\/coder\/coder.module": "Re-format coder.module according to Drupal coding standards.",
                    "drush coder-format --undo sites\/all\/modules\/coder\/coder.module": "Restore coder.module from coder.module.coder.orig backup file (if existent).",
                    "drush coder-format sites\/all\/modules\/coder": "Recursively re-format Coder module files according to Drupal coding standards.",
                    "drush coder-format --undo sites\/all\/modules\/coder": "Recursively restore Coder module files from *.coder.orig backup files (if existent)."
                },
                "command": "coder-format",
                "command-hook": "coder-format",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "coder",
                "path": "\/Users\/mbell\/.drush\/coder",
                "engines": [],
                "callback": "drush_command",
                "primary function": false,
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "required-arguments": false,
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "aliases": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "coder",
                "bootstrap": 6
            },
            "coder-review": {
                "callback": "drush_command",
                "description": "Run code reviews",
                "drupal dependencies": [
                    "coder_review"
                ],
                "bootstrap": 0,
                "aliases": [
                    "coder",
                    "review",
                    "lint"
                ],
                "command": "coder-review",
                "command-hook": "coder-review",
                "invoke hooks": true,
                "callback arguments": [],
                "commandfile": "coder_review",
                "path": "\/Users\/mbell\/.drush\/coder\/coder_review",
                "engines": [],
                "primary function": "coder_review_drush_review",
                "sections": {
                    "examples": "Examples",
                    "arguments": "Arguments",
                    "options": "Options"
                },
                "arguments": [],
                "required-arguments": false,
                "options": [],
                "sub-options": [],
                "allow-additional-options": false,
                "global-options": [],
                "examples": [],
                "core": [],
                "scope": "site",
                "drush dependencies": [],
                "handle-remote-commands": false,
                "remote-tty": false,
                "strict-option-handling": false,
                "bootstrap_errors": [],
                "topics": [],
                "hidden": false,
                "category": "coder_review"
            }
        }
    }
}
